{"ast":null,"code":"var _jsxFileName = \"/Users/mialee/Documents/GitHub/ShareNWWebtool/src/components/InfographicEditor/Toolbar/ToolbarOptions.js\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faDownload } from '@fortawesome/free-solid-svg-icons';\nimport '../../../css/React/EditorToolbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ToolbarOptions extends React.Component {\n  render() {\n    let editorOption = this._CreateEditorOption();\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toolbar-options-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"toolbar-home-button\",\n            onClick: () => {\n              this.props.displayHome();\n            },\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: \"toolbar-home-icon\",\n              icon: faHome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vertical-divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"toolbar-insert\",\n          className: \"toolbar-text selected\",\n          style: {\n            left: '35px'\n          },\n          onClick: () => {\n            this.props.setToolbarContent('insert');\n          },\n          children: \"Insert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"toolbar-edit\",\n          className: \"toolbar-text\",\n          style: {\n            left: '60px'\n          },\n          onClick: () => {\n            this.props.setToolbarContent('edit');\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), editorOption]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toolbar-options-right\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"toolbar-download\",\n          className: \"toolbar-text\",\n          onClick: () => {\n            this.props.toggleDownload();\n          },\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"toolbar-download-icon\",\n            icon: faDownload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"toolbar-download-text\",\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n  componentDidUpdate() {\n    // Add underline\n    if (this.props.toolbarContent === 'none') return;\n    let newElem = document.getElementById('toolbar-' + this.props.toolbarContent);\n    newElem.classList.add('selected');\n  }\n\n  _CreateEditorOption() {\n    switch (this.props.currentEditor) {\n      case 'text-editor':\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"toolbar-text-editor\",\n          className: \"toolbar-text\",\n          style: {\n            left: '80px'\n          },\n          onClick: () => {\n            this.props.setToolbarContent('text-editor');\n          },\n          children: \"Text Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this);\n\n      case 'bar-editor':\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"toolbar-bar-editor\",\n          className: \"toolbar-text\",\n          style: {\n            left: '80px'\n          },\n          onClick: () => {\n            this.props.setToolbarContent('bar-editor');\n          },\n          children: \"Bar Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this);\n\n      case 'waffle-editor':\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"toolbar-waffle-editor\",\n          className: \"toolbar-text\",\n          style: {\n            left: '80px'\n          },\n          onClick: () => {\n            this.props.setToolbarContent('waffle-editor');\n          },\n          children: \"Waffle Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this);\n\n      case 'pie-editor':\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"toolbar-pie-editor\",\n          className: \"toolbar-text\",\n          style: {\n            left: '80px'\n          },\n          onClick: () => {\n            this.props.setToolbarContent('pie-editor');\n          },\n          children: \"Pie Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this);\n\n      case 'stacked-bar-editor':\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"toolbar-stacked-bar-editor\",\n          className: \"toolbar-text\",\n          style: {\n            left: '80px'\n          },\n          onClick: () => {\n            this.props.setToolbarContent('stacked-bar-editor');\n          },\n          children: \"Stacked Bar Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this);\n\n      case 'header-editor':\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"toolbar-header-editor\",\n          className: \"toolbar-text\",\n          style: {\n            left: '80px'\n          },\n          onClick: () => {\n            this.props.setToolbarContent('header-editor');\n          },\n          children: \"Graphics Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this);\n\n      case 'image-editor':\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"toolbar-image-editor\",\n          className: \"toolbar-text\",\n          style: {\n            left: '80px'\n          },\n          onClick: () => {\n            this.props.setToolbarContent('image-editor');\n          },\n          children: \"Image Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this);\n\n      case 'icon-editor':\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"toolbar-icon-editor\",\n          className: \"toolbar-text\",\n          style: {\n            left: '80px'\n          },\n          onClick: () => {\n            this.props.setToolbarContent('icon-editor');\n          },\n          children: \"Icon Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this);\n\n      case 'line-editor':\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"toolbar-line-editor\",\n          className: \"toolbar-text\",\n          style: {\n            left: '80px'\n          },\n          onClick: () => {\n            this.props.setToolbarContent('line-editor');\n          },\n          children: \"Line Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this);\n\n      case 'icon-bar-editor':\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"toolbar-icon-bar-editor\",\n          className: \"toolbar-text\",\n          style: {\n            left: '80px'\n          },\n          onClick: () => {\n            this.props.setToolbarContent('icon-bar-editor');\n          },\n          children: \"Bar Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this);\n\n      case 'donut-editor':\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"toolbar-donut-editor\",\n          className: \"toolbar-text\",\n          style: {\n            left: '80px'\n          },\n          onClick: () => {\n            this.props.setToolbarContent('donut-editor');\n          },\n          children: \"Donut Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this);\n\n      default:\n        return false;\n    }\n  }\n\n}\n\nexport { ToolbarOptions };","map":{"version":3,"sources":["/Users/mialee/Documents/GitHub/ShareNWWebtool/src/components/InfographicEditor/Toolbar/ToolbarOptions.js"],"names":["React","FontAwesomeIcon","faHome","faDownload","ToolbarOptions","Component","render","editorOption","_CreateEditorOption","props","displayHome","left","setToolbarContent","toggleDownload","componentDidUpdate","toolbarContent","newElem","document","getElementById","classList","add","currentEditor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faDownload } from '@fortawesome/free-solid-svg-icons';\n\nimport '../../../css/React/EditorToolbar.css';\n\nclass ToolbarOptions extends React.Component \n{\n    render()\n    {\n        let editorOption = this._CreateEditorOption();\n        return (\n            <div className='toolbar-options'>\n                <div className='toolbar-options-left'>\n                    <div className='button-container'>\n                        <button \n                            className='toolbar-home-button'\n                            onClick={() => { this.props.displayHome(); }}>\n                            <FontAwesomeIcon className='toolbar-home-icon' icon={faHome} />\n                        </button>\n                    </div>\n                    <div className='vertical-divider'></div>\n                    <button\n                        id='toolbar-insert'\n                        className='toolbar-text selected'\n                        style={{left: '35px'}}\n                        onClick={() => { this.props.setToolbarContent('insert'); }}>\n                        Insert\n                    </button>\n                    <button\n                        id='toolbar-edit'\n                        className='toolbar-text'\n                        style={{left: '60px'}}\n                        onClick={() => { this.props.setToolbarContent('edit'); }}>\n                        Edit\n                    </button>\n                    {editorOption}\n                </div>\n                <div className='toolbar-options-right'>\n                    <div \n                        id='toolbar-download'\n                        className='toolbar-text'\n                        onClick={() => { this.props.toggleDownload(); }}>\n                        <FontAwesomeIcon \n                            className='toolbar-download-icon'\n                            icon={faDownload} />\n                        <div id='toolbar-download-text'>Download</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidUpdate()\n    {\n        // Add underline\n        if (this.props.toolbarContent === 'none') return;\n        let newElem = document.getElementById('toolbar-' + this.props.toolbarContent);\n        newElem.classList.add('selected');\n    }\n\n    _CreateEditorOption()\n    {\n        switch(this.props.currentEditor) {\n            case 'text-editor':\n                return (\n                    <button\n                        id='toolbar-text-editor'\n                        className='toolbar-text'\n                        style={{left: '80px'}}\n                        onClick={() => { this.props.setToolbarContent('text-editor'); }}>\n                        Text Editor\n                    </button>\n                );\n            case 'bar-editor':\n                return (\n                    <button\n                        id='toolbar-bar-editor'\n                        className='toolbar-text'\n                        style={{left: '80px'}}\n                        onClick={() => { this.props.setToolbarContent('bar-editor')}}>\n                        Bar Editor \n                    </button>\n                );\n            case 'waffle-editor':\n                return (\n                    <button\n                        id='toolbar-waffle-editor'\n                        className='toolbar-text'\n                        style={{left: '80px'}}\n                        onClick={() => { this.props.setToolbarContent('waffle-editor')}}>\n                        Waffle Editor\n                    </button>\n                );\n            case 'pie-editor':\n                return (\n                    <button\n                        id='toolbar-pie-editor'\n                        className='toolbar-text'\n                        style={{left: '80px'}}\n                        onClick={() => { this.props.setToolbarContent('pie-editor')}}>\n                        Pie Editor\n                    </button>\n                );\n            case 'stacked-bar-editor':\n                return (\n                    <button\n                        id='toolbar-stacked-bar-editor'\n                        className='toolbar-text'\n                        style={{left: '80px'}}\n                        onClick={() => { this.props.setToolbarContent('stacked-bar-editor')}}>\n                        Stacked Bar Editor\n                    </button>\n                ); \n            case 'header-editor':\n                return (\n                    <button\n                        id='toolbar-header-editor'\n                        className='toolbar-text'\n                        style={{left: '80px'}}\n                        onClick={() => { this.props.setToolbarContent('header-editor')}}>\n                        Graphics Editor\n                    </button>\n                );\n            case 'image-editor':\n                return (\n                    <button\n                        id='toolbar-image-editor'\n                        className='toolbar-text'\n                        style={{left: '80px'}}\n                        onClick={() => { this.props.setToolbarContent('image-editor')}}>\n                        Image Editor\n                    </button>\n                );\n            case 'icon-editor':\n                return (\n                    <button\n                        id='toolbar-icon-editor'\n                        className='toolbar-text'\n                        style={{left: '80px'}}\n                        onClick={() => { this.props.setToolbarContent('icon-editor')}}>\n                        Icon Editor\n                    </button>\n                );\n            case 'line-editor':\n                return (\n                    <button\n                        id='toolbar-line-editor'\n                        className='toolbar-text'\n                        style={{left: '80px'}}\n                        onClick={() => { this.props.setToolbarContent('line-editor')}}>\n                        Line Editor\n                    </button>\n                ); \n            case 'icon-bar-editor':\n                return (\n                    <button\n                        id='toolbar-icon-bar-editor'\n                        className='toolbar-text'\n                        style={{left: '80px'}}\n                        onClick={() => { this.props.setToolbarContent('icon-bar-editor')}}>\n                        Bar Editor\n                    </button>\n                );\n            case 'donut-editor':\n                return (\n                    <button\n                        id='toolbar-donut-editor'\n                        className='toolbar-text'\n                        style={{left: '80px'}}\n                        onClick={() => { this.props.setToolbarContent('donut-editor')}}>\n                        Donut Editor\n                    </button>\n                ); \n            default: \n                return false;\n        }\n    }\n}\n\nexport { ToolbarOptions };"]},"metadata":{},"sourceType":"module"}
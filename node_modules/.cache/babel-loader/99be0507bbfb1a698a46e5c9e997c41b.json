{"ast":null,"code":"var _jsxFileName = \"/Users/mialee/Documents/GitHub/ShareNWWebtool/src/components/InfographicEditor/Editors/ImageEditor.js\";\nimport React from 'react';\nimport { Menu, LabeledTextField, LabeledSlider, LabeledColorPicker } from './Components/index';\nimport '../../../css/React/Editors/Tabless.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ImageEditor extends React.Component {\n  render() {\n    this.imageLibrary = window.localStorage;\n    window.localStorage.setItem('user', JSON.stringify(this.imageLibrary));\n    console.log(this.props.settings);\n    if (this.props.settings === 0) return false;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabless-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabless-editor\",\n        children: [/*#__PURE__*/_jsxDEV(Menu, {\n          name: \"Size Settings\",\n          isOpen: false,\n          content: this._GetSizeContent(),\n          checkbox: {\n            displayCheckbox: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          name: \"Display Settings\",\n          isOpen: false,\n          content: this._GetDisplayContent(),\n          checkbox: {\n            displayCheckbox: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          name: \"Image Corrections\",\n          isOpen: false,\n          content: this._GetCorrectionsContent(),\n          checkbox: {\n            displayCheckbox: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  }\n\n  _SetGraphicSettings(key, value) {\n    let settings = this.props.settings;\n    settings[key] = value;\n    this.props.setGraphicSettings(settings);\n  }\n\n  _GetSizeContent() {\n    return [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(LabeledTextField, {\n        label: \"Width:\",\n        index: 'width',\n        initialValue: this.props.settings.width,\n        rows: 1,\n        cols: 5,\n        onChange: (d, i) => {\n          this._SetGraphicSettings('width', parseFloat(d));\n        }\n      }, 'image-width', false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LabeledTextField, {\n        label: \"Height:\",\n        index: 'height',\n        initialValue: this.props.settings.height,\n        rows: 1,\n        cols: 5,\n        onChange: (d, i) => {\n          this._SetGraphicSettings('height', parseFloat(d));\n        }\n      }, 'image-height-' + this.props.settings.height, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)];\n  }\n\n  _GetDisplayContent() {\n    return [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(LabeledSlider, {\n        label: \"Opacity:\",\n        value: parseFloat(this.props.settings.opacity),\n        min: 0,\n        max: 1,\n        step: 0.1,\n        onChange: event => {\n          this._SetGraphicSettings('opacity', event);\n        },\n        width: \"150px\"\n      }, 'image-opacity', false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LabeledColorPicker, {\n        label: \"Stroke Color:\",\n        color: this.props.settings.stroke,\n        onChange: value => {\n          this._SetGraphicSettings('stroke', value);\n        }\n      }, 'image-stroke-color', false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LabeledTextField, {\n        label: \"Stroke Width:\",\n        index: 'stroke',\n        initialValue: this.props.settings.strokeWidth,\n        rows: 1,\n        cols: 5,\n        onChange: (d, i) => {\n          this._SetGraphicSettings('strokeWidth', parseFloat(d));\n        }\n      }, 'image-stroke-width', false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)];\n  }\n\n  _GetCorrectionsContent() {\n    return [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(LabeledSlider, {\n        label: \"Contrast:\",\n        value: this.props.settings.contrast,\n        min: -100,\n        max: 100,\n        step: 1,\n        onChange: event => {\n          this._SetGraphicSettings('contrast', parseFloat(event));\n        },\n        width: \"150px\"\n      }, 'image-contrast', false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LabeledSlider, {\n        label: \"Brightness:\",\n        value: this.props.settings.brightness,\n        min: -1,\n        max: 1,\n        step: 0.1,\n        onChange: event => {\n          this._SetGraphicSettings('brightness', parseFloat(event));\n        },\n        width: \"150px\"\n      }, 'image-brightness', false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LabeledSlider, {\n        label: \"Blur:\",\n        value: this.props.settings.blurRadius,\n        min: 0,\n        max: 40,\n        step: 1,\n        onChange: event => {\n          this._SetGraphicSettings('blurRadius', parseFloat(event));\n        },\n        width: \"150px\"\n      }, 'image-blur', false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)];\n  }\n\n}\n\nexport { ImageEditor };","map":{"version":3,"sources":["/Users/mialee/Documents/GitHub/ShareNWWebtool/src/components/InfographicEditor/Editors/ImageEditor.js"],"names":["React","Menu","LabeledTextField","LabeledSlider","LabeledColorPicker","ImageEditor","Component","render","imageLibrary","window","localStorage","setItem","JSON","stringify","console","log","props","settings","_GetSizeContent","displayCheckbox","_GetDisplayContent","_GetCorrectionsContent","_SetGraphicSettings","key","value","setGraphicSettings","width","d","i","parseFloat","height","opacity","event","stroke","strokeWidth","contrast","brightness","blurRadius"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Menu, LabeledTextField, LabeledSlider, LabeledColorPicker } from './Components/index';\nimport '../../../css/React/Editors/Tabless.css';\n\nclass ImageEditor extends React.Component\n{\n    render()\n    {\n        this.imageLibrary = window.localStorage;\n        window.localStorage.setItem('user', JSON.stringify(this.imageLibrary));\n        console.log(this.props.settings)\n        if (this.props.settings === 0) return false;\n        return (\n            <div className='tabless-container'>\n                <div className='tabless-editor'>\n                    <Menu \n                        name='Size Settings'\n                        isOpen={false}\n                        content={this._GetSizeContent()}\n                        checkbox={{\n                            displayCheckbox: false\n                        }}\n                    />\n                    <Menu \n                        name='Display Settings'\n                        isOpen={false}\n                        content={this._GetDisplayContent()}\n                        checkbox={{\n                            displayCheckbox: false\n                        }}\n                    />\n                    <Menu \n                        name='Image Corrections'\n                        isOpen={false}\n                        content={this._GetCorrectionsContent()}\n                        checkbox={{\n                            displayCheckbox: false\n                        }}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    _SetGraphicSettings(key, value)\n    {\n        let settings = this.props.settings;\n        settings[key] = value;\n        this.props.setGraphicSettings(settings);\n    }\n\n    _GetSizeContent()\n    {\n        return [\n            <div className='center'>\n                <LabeledTextField \n                    key={'image-width'}\n                    label='Width:'\n                    index={'width'}\n                    initialValue={this.props.settings.width}\n                    rows={1}\n                    cols={5}\n                    onChange={(d, i) => { \n                        this._SetGraphicSettings('width', parseFloat(d));\n                    }}\n                />\n                <LabeledTextField \n                    key={'image-height-' + this.props.settings.height}\n                    label='Height:'\n                    index={'height'}\n                    initialValue={this.props.settings.height}\n                    rows={1}\n                    cols={5}\n                    onChange={(d, i) => {\n                        this._SetGraphicSettings('height', parseFloat(d));    \n                    }}\n                />\n            </div>\n        ];\n    }\n\n    _GetDisplayContent()\n    {\n        return [\n            <div className='center'>\n                <LabeledSlider\n                    key={'image-opacity'} \n                    label='Opacity:'\n                    value={parseFloat(this.props.settings.opacity)}\n                    min={0}\n                    max={1}\n                    step={0.1}\n                    onChange={(event) => { \n                        this._SetGraphicSettings('opacity', event);\n                    }}\n                    width='150px'\n                />\n                <LabeledColorPicker \n                    key={'image-stroke-color'}\n                    label='Stroke Color:'\n                    color={this.props.settings.stroke}\n                    onChange={(value) => { \n                        this._SetGraphicSettings('stroke', value);\n                    }}\n                />\n                <LabeledTextField \n                    key={'image-stroke-width'}\n                    label='Stroke Width:'\n                    index={'stroke'}\n                    initialValue={this.props.settings.strokeWidth}\n                    rows={1}\n                    cols={5}\n                    onChange={(d, i) => { \n                        this._SetGraphicSettings('strokeWidth', parseFloat(d));\n                    }}\n                />\n            </div>\n        ];\n    }\n    _GetCorrectionsContent()\n    {\n        return [\n            <div className='center'>\n                <LabeledSlider \n                    key={'image-contrast'}\n                    label='Contrast:'\n                    value={this.props.settings.contrast}\n                    min={-100}\n                    max={100}\n                    step={1}\n                    onChange={(event) => { \n                        this._SetGraphicSettings('contrast', parseFloat(event));\n                    }}\n                    width='150px' \n                />\n                <LabeledSlider \n                    key={'image-brightness'}\n                    label='Brightness:'\n                    value={this.props.settings.brightness}\n                    min={-1}\n                    max={1}\n                    step={0.1}\n                    onChange={(event) => { \n                        this._SetGraphicSettings('brightness', parseFloat(event));\n                    }}\n                    width='150px' \n                />\n                <LabeledSlider \n                    key={'image-blur'}\n                    label='Blur:'\n                    value={this.props.settings.blurRadius}\n                    min={0}\n                    max={40}\n                    step={1}\n                    onChange={(event) => { \n                        this._SetGraphicSettings('blurRadius', parseFloat(event));\n                    }}\n                    width='150px' \n                />\n            </div>\n        ];\n    }\n}\n\nexport { ImageEditor };"]},"metadata":{},"sourceType":"module"}
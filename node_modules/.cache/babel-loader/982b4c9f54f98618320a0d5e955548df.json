{"ast":null,"code":"// Cullen, Riley\n// ArrowHeader.js\n// Janurary 24, 2020\nimport Konva from 'konva';\n\nclass ArrowHeader {\n  /**\n   * @summary     Constructs a new ArrowHeader and adds it to the parameterized\n   *              group.\n   * @description Constructor that sets up the instance variable associated with\n   *              an ArrowHeader object. This object draws an arrow like section\n   *              background and adds it to the canvas via the parameterized \n   *              group object.\n   * \n   * @requires Konva.js\n   * \n   * @param {double}      x               The x position of the arrow.\n   * @param {double}      y               The y position of the arrow.\n   * @param {double}      width           Width of arrow. \n   * @param {double}      height          Height of arrow.\n   * @param {Konva.Group} group           The group we want to add the arrow object to.\n   * @param {string}      borderColor     Color of arrow's border.\n   * @param {string}      backgroundColor Color of arrow's background.\n   */\n  constructor(x, y, width, height, group, borderColor, backgroundColor) {\n    this._x = x;\n    this._y = y;\n    this._width = width;\n    this._height = height;\n    this._group = new Konva.Group();\n    this._borderColor = borderColor;\n    this._backgroundColor = backgroundColor;\n    group.add(this._group);\n  }\n  /**\n   * @summary     Creates the ArrowHeader section in group.\n   */\n\n\n  CreateHeader() {\n    var helper = this._width / 10;\n    var x1 = this._x,\n        y1 = this._y,\n        x2 = x1 + (this._width - helper),\n        y2 = this._height / 2,\n        x3 = x2 + helper;\n    var border = new Konva.Line({\n      points: [x1, y1, x2, y1, x3, y2, x2, this._height, x1, this._height],\n      fill: this._backgroundColor,\n      stroke: this._borderColor,\n      strokeWidth: this._width / 81,\n      closed: true\n    });\n    var offset = 7;\n    var miniBorder = new Konva.Line({\n      points: [x1 + offset, y1 + offset, x2 - offset / 2, y1 + offset, x3 - offset, y2, x2 - offset / 2, this._height - offset, x1 + offset, this._height - offset],\n      fill: this._backgroundColor,\n      stroke: this._borderColor,\n      strokeWidth: this._width / 256,\n      closed: true\n    });\n\n    this._group.add(border);\n\n    this._group.add(miniBorder);\n  }\n  /**\n   * @summary Returns the Konva.Group of this header to the caller.\n   * @returns A Konva.Group object.\n   */\n\n\n  GetGroup() {\n    return this._group;\n  }\n  /**\n   * @summary     Removes the header from the infographic.\n   * @description A wrapper function that calls the Konva.Group function \n   *              destroy(), which removes the group as well as its children\n   *              forever.\n   */\n\n\n  Remove() {\n    this._group.destroy();\n  }\n\n  UpdateHeader(settings) {\n    this._width = parseFloat(settings.size.width);\n    this._height = parseFloat(settings.size.height);\n    this._borderColor = settings.display.borderColor.value;\n    this._backgroundColor = settings.display.backgroundColor.value;\n\n    this._group.destroyChildren();\n  }\n\n  GetSettings() {\n    return {\n      size: {\n        width: this._width,\n        height: this._height\n      },\n      display: {\n        borderColor: {\n          type: 'color-picker',\n          name: 'Border Color:',\n          value: this._borderColor\n        },\n        backgroundColor: {\n          type: 'color-picker',\n          name: 'Background Color:',\n          value: this._backgroundColor\n        }\n      }\n    };\n  }\n\n  GetAttrs() {\n    return {\n      x: this._x,\n      y: this._y,\n      width: this._width,\n      height: this._height,\n      group: this._group,\n      borderColor: this._borderColor,\n      backgroundColor: this._backgroundColor\n    };\n  }\n\n}\n\nexport { ArrowHeader };","map":{"version":3,"sources":["/Users/mialee/Documents/GitHub/ShareNWWebtool/src/js/Headers/ArrowHeader.js"],"names":["Konva","ArrowHeader","constructor","x","y","width","height","group","borderColor","backgroundColor","_x","_y","_width","_height","_group","Group","_borderColor","_backgroundColor","add","CreateHeader","helper","x1","y1","x2","y2","x3","border","Line","points","fill","stroke","strokeWidth","closed","offset","miniBorder","GetGroup","Remove","destroy","UpdateHeader","settings","parseFloat","size","display","value","destroyChildren","GetSettings","type","name","GetAttrs"],"mappings":"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","sourcesContent":["// Cullen, Riley\n// ArrowHeader.js\n// Janurary 24, 2020\n\nimport Konva from 'konva';\n\nclass ArrowHeader \n{\n    /**\n     * @summary     Constructs a new ArrowHeader and adds it to the parameterized\n     *              group.\n     * @description Constructor that sets up the instance variable associated with\n     *              an ArrowHeader object. This object draws an arrow like section\n     *              background and adds it to the canvas via the parameterized \n     *              group object.\n     * \n     * @requires Konva.js\n     * \n     * @param {double}      x               The x position of the arrow.\n     * @param {double}      y               The y position of the arrow.\n     * @param {double}      width           Width of arrow. \n     * @param {double}      height          Height of arrow.\n     * @param {Konva.Group} group           The group we want to add the arrow object to.\n     * @param {string}      borderColor     Color of arrow's border.\n     * @param {string}      backgroundColor Color of arrow's background.\n     */\n    constructor(x, y, width, height, group, borderColor, backgroundColor)\n    {   \n        this._x = x;\n        this._y = y;\n        this._width = width;\n        this._height = height;\n        this._group = new Konva.Group();\n        this._borderColor = borderColor;\n        this._backgroundColor = backgroundColor;\n        \n        group.add(this._group);\n    }\n\n    /**\n     * @summary     Creates the ArrowHeader section in group.\n     */\n    CreateHeader()\n    {\n        var helper = this._width / 10;\n        var x1 = this._x,\n            y1 = this._y,\n            x2 = x1 + (this._width - helper),\n            y2 = this._height / 2, \n            x3 = x2 + helper;\n        var border = new Konva.Line({\n            points: [x1, y1, x2, y1, x3, y2, x2, this._height, x1, this._height],\n            fill: this._backgroundColor,\n            stroke: this._borderColor,\n            strokeWidth: this._width / 81,\n            closed: true,\n        });\n\n        var offset = 7;\n        var miniBorder = new Konva.Line({\n            points: [x1 + offset, y1 + offset, x2 - offset / 2, y1 + offset, \n                x3 - offset, y2, x2 - offset / 2, this._height - offset, \n                x1 + offset, this._height - offset],\n            fill: this._backgroundColor,\n            stroke: this._borderColor,\n            strokeWidth: this._width / 256,\n            closed: true, \n        })\n\n        this._group.add(border);\n        this._group.add(miniBorder);\n    }\n\n    /**\n     * @summary Returns the Konva.Group of this header to the caller.\n     * @returns A Konva.Group object.\n     */\n    GetGroup()\n    {\n        return this._group;\n    }\n\n    /**\n     * @summary     Removes the header from the infographic.\n     * @description A wrapper function that calls the Konva.Group function \n     *              destroy(), which removes the group as well as its children\n     *              forever.\n     */\n    Remove()\n    {\n        this._group.destroy();\n    }\n\n    UpdateHeader(settings)\n    {\n        this._width = parseFloat(settings.size.width);\n        this._height = parseFloat(settings.size.height);\n\n        this._borderColor = settings.display.borderColor.value;\n        this._backgroundColor = settings.display.backgroundColor.value;\n\n        this._group.destroyChildren();\n    }\n\n    GetSettings()\n    {\n        return {\n            size: {\n                width: this._width,\n                height: this._height,\n            },\n            display: {\n                borderColor: {\n                    type: 'color-picker',\n                    name: 'Border Color:',\n                    value: this._borderColor,\n                },\n                backgroundColor: {\n                    type: 'color-picker',\n                    name: 'Background Color:',\n                    value: this._backgroundColor\n                },\n            }\n        }\n    }\n\n    GetAttrs()\n    {\n        return {\n            x: this._x,\n            y: this._y,\n            width: this._width,\n            height: this._height,\n            group: this._group,\n            borderColor: this._borderColor,\n            backgroundColor: this._backgroundColor,\n        }\n    }\n}\n\nexport { ArrowHeader };"]},"metadata":{},"sourceType":"module"}
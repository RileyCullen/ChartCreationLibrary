{"ast":null,"code":"// Cullen, Riley\n// DonutDecorator.js\n// October 18, 2020\nimport { APieChartDecorator } from \"./APieChartDecorator\";\nimport Konva from 'konva';\n\nclass DonutDecorator extends APieChartDecorator {\n  /**\n   * @summary     Turns chart into a donut chart.\n   * @description This decorator turns a given pie chart into a donut chart\n   *              by adding a smaller circle in the center of a given pie chart.\n   * \n   * @requires APieChartDecorator.js\n   * \n   * @see APieChartDecorator.js\n   * \n   * @param {APieChart} chart       : The chart we want to decorate\n   * @param {float}     innerRadius : Radius of smaller circle\n   * @param {string}    color       : The color of the smaller circle\n   */\n  constructor({\n    chart,\n    innerRadius,\n    color = 'white'\n  }) {\n    super(chart);\n    this._innerRadius = innerRadius > this._radius - 10 ? this._radius - this._radius * 3 / 10 : innerRadius;\n    this._color = color;\n  }\n  /**\n   * @summary     Creates pie chart, decorates it, and adds it to group.\n   * @description Calls _chart's CreateChart method and calls _DrawInnerCircle\n   *              to turn the given pie chart into a donut chart.\n   */\n\n\n  CreateChart() {\n    this._chart.CreateChart();\n\n    this._DrawInnerCircle();\n  }\n\n  _GetDecoratorSettings() {\n    return {\n      innerRadius: this._radius,\n      color: this._color\n    };\n  }\n  /**\n   * @summary     Draws inner circle.\n   * @description See summary.\n   */\n\n\n  _DrawInnerCircle() {\n    console.log('ir: ' + this._innerRadius);\n\n    this._group.add(new Konva.Circle({\n      radius: this._innerRadius,\n      fill: this._color,\n      x: this._startingX,\n      y: this._startingY\n    }));\n  }\n  /**\n   * @summary Updates GetRadius to return _innerRadius instead of _radius.\n   */\n\n\n  GetRadius() {\n    return this._innerRadius;\n  }\n\n}\n\nexport { DonutDecorator };","map":{"version":3,"sources":["/Users/mialee/Documents/GitHub/ShareNWWebtool/src/js/Charts/PieChart/Decorators/DonutDecorator.js"],"names":["APieChartDecorator","Konva","DonutDecorator","constructor","chart","innerRadius","color","_innerRadius","_radius","_color","CreateChart","_chart","_DrawInnerCircle","_GetDecoratorSettings","console","log","_group","add","Circle","radius","fill","x","_startingX","y","_startingY","GetRadius"],"mappings":"AAAA;AACA;AACA;AAEA,SAASA,kBAAT,QAAmC,sBAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAN,SAA6BF,kBAA7B,CACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIG,EAAAA,WAAW,CAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA,KAAK,GAAG;AAA7B,GAAD,EACX;AACI,UAAMF,KAAN;AACA,SAAKG,YAAL,GAAqBF,WAAW,GAAG,KAAKG,OAAL,GAAe,EAA9B,GAAoC,KAAKA,OAAL,GAAgB,KAAKA,OAAL,GAAe,CAAf,GAAiB,EAArE,GAA2EH,WAA/F;AACA,SAAKI,MAAL,GAAcH,KAAd;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACII,EAAAA,WAAW,GACX;AACI,SAAKC,MAAL,CAAYD,WAAZ;;AACA,SAAKE,gBAAL;AACH;;AAEDC,EAAAA,qBAAqB,GACrB;AACI,WAAO;AACHR,MAAAA,WAAW,EAAE,KAAKG,OADf;AAEHF,MAAAA,KAAK,EAAE,KAAKG;AAFT,KAAP;AAIH;AAED;AACJ;AACA;AACA;;;AACIG,EAAAA,gBAAgB,GAChB;AACIE,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAS,KAAKR,YAA1B;;AACA,SAAKS,MAAL,CAAYC,GAAZ,CAAgB,IAAIhB,KAAK,CAACiB,MAAV,CAAiB;AAC7BC,MAAAA,MAAM,EAAE,KAAKZ,YADgB;AAE7Ba,MAAAA,IAAI,EAAE,KAAKX,MAFkB;AAG7BY,MAAAA,CAAC,EAAE,KAAKC,UAHqB;AAI7BC,MAAAA,CAAC,EAAE,KAAKC;AAJqB,KAAjB,CAAhB;AAMH;AAED;AACJ;AACA;;;AACIC,EAAAA,SAAS,GACT;AACI,WAAO,KAAKlB,YAAZ;AACH;;AA7DL;;AAgEA,SAASL,cAAT","sourcesContent":["// Cullen, Riley\n// DonutDecorator.js\n// October 18, 2020\n\nimport { APieChartDecorator } from \"./APieChartDecorator\";\nimport Konva from 'konva';\n\nclass DonutDecorator extends APieChartDecorator\n{\n    /**\n     * @summary     Turns chart into a donut chart.\n     * @description This decorator turns a given pie chart into a donut chart\n     *              by adding a smaller circle in the center of a given pie chart.\n     * \n     * @requires APieChartDecorator.js\n     * \n     * @see APieChartDecorator.js\n     * \n     * @param {APieChart} chart       : The chart we want to decorate\n     * @param {float}     innerRadius : Radius of smaller circle\n     * @param {string}    color       : The color of the smaller circle\n     */\n    constructor({chart, innerRadius, color = 'white'})\n    {\n        super(chart);\n        this._innerRadius = (innerRadius > this._radius - 10) ? this._radius - (this._radius * 3/10) : innerRadius;\n        this._color = color;\n    }\n\n    /**\n     * @summary     Creates pie chart, decorates it, and adds it to group.\n     * @description Calls _chart's CreateChart method and calls _DrawInnerCircle\n     *              to turn the given pie chart into a donut chart.\n     */\n    CreateChart()\n    {\n        this._chart.CreateChart();\n        this._DrawInnerCircle();\n    }\n\n    _GetDecoratorSettings()\n    {\n        return {\n            innerRadius: this._radius,\n            color: this._color\n        }\n    }\n\n    /**\n     * @summary     Draws inner circle.\n     * @description See summary.\n     */\n    _DrawInnerCircle()\n    {\n        console.log('ir: ' + this._innerRadius)\n        this._group.add(new Konva.Circle({\n            radius: this._innerRadius,\n            fill: this._color,\n            x: this._startingX,\n            y: this._startingY,\n        }));\n    }\n\n    /**\n     * @summary Updates GetRadius to return _innerRadius instead of _radius.\n     */\n    GetRadius()\n    {\n        return this._innerRadius;\n    }\n}\n\nexport { DonutDecorator };"]},"metadata":{},"sourceType":"module"}
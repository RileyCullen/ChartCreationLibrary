{"ast":null,"code":"// Cullen, Riley\n// XAxisDecorator.js\n// October 10, 2020\nimport { ABarChartDecorator } from \"./ABarChartDecorator\";\nimport Konva from 'konva';\nimport Lodash from 'lodash';\n\nclass XAxisDecorator extends ABarChartDecorator {\n  /**\n   * @summary     This type is a concrete decorator that adds a x-axis to the \n   *              bar chart. \n   * @description This class adds a x-axis line, tick marks, and tick labels\n   *              to the given bar chart (or decorator).\n   * \n   * @requires ABarChartDecorator.js\n   * @requires FontWidthDetector.js\n   * \n   * @see ABarChartDecorator.js\n   * \n   * @param {BarChart}   chart           This type is a concrete bar chart (or decorator)\n   *                                     that we plan on decorating.\n   * @param {string}     lineColor       The color of the axis and its tick marks\n   * @param {int}        lineStrokeWidth Width of the x-axis\n   * @param {int}        tickStrokeWidth Width of the x-axis ticks\n   * @param {JSON Array} font            Determines font size and font family\n   */\n  constructor({\n    chart,\n    lineColor = 'black',\n    lineStrokeWidth = 1,\n    tickStrokeWidth = 0.5,\n    font = {\n      fontSize: 10,\n      fontFamily: 'Times New Roman, Times, serif',\n      textColor: '#000'\n    }\n  }) {\n    super(chart);\n    this._lineColor = lineColor;\n    this._lineStrokeWidth = lineStrokeWidth;\n    this._tickStrokeWidth = tickStrokeWidth;\n    this._font = Lodash.cloneDeep(font);\n  }\n  /**\n   * @summary     This function adds an x-axis to the given BarChart type.\n   * @description This function calls _chart's CreateBarChart method as well\n   *              as _CreateXAxis.\n   */\n\n\n  CreateChart() {\n    this._chart.CreateChart();\n\n    this._CreateXAxis();\n  }\n\n  GetDecoratorSettings() {\n    return {\n      xAxis: {\n        font: this._font,\n        color: {\n          lineColor: this._lineColor\n        },\n        size: {\n          lineStrokeWidth: this._lineStrokeWidth,\n          tickStrokeWidth: this._tickStrokeWidth\n        }\n      }\n    };\n  }\n  /**\n   * @summary     This function adds an x-axis to the given BarChart type.\n   * @description This function creates an x-axis by calling _CreateAxis\n   *              and _AddTicks.\n   */\n\n\n  _CreateXAxis() {\n    this._CreateAxis();\n\n    this._AddTicks();\n\n    this._CreateAxisLabel(maxHeight);\n  }\n  /**\n   * @summary     This function adds a base line that represents the x-axis.\n   * @description This function adds a line to the Konva.Group that will\n   *              serve as the base for the x-axis.\n   */\n\n\n  _CreateAxis() {\n    var helper = new Konva.Group();\n    helper.add(new Konva.Line({\n      points: [0, this._chartHeight, this._chartWidth, this._chartHeight],\n      stroke: this._lineColor,\n      strokeWidth: this._lineStrokeWidth\n    }));\n    helper.rotate(this._rotateBy);\n\n    this._group.add(helper);\n  }\n  /**\n   * @summary     This function adds tick marks and labels to the x-axis.\n   * @description This function iterates through all of the previously mapped\n   *              values in the xScale's domain and assigns them a tick \n   *              mark. The tick mark and the name of the mapped value are\n   *              then added to the Konva.Group.\n   */\n\n\n  _AddTicks() {\n    var helper = new Konva.Group();\n\n    var textHeight = this._GetFontSize('M', this._font);\n\n    this._xScale.domain().forEach(d => {\n      helper.add(new Konva.Line({\n        points: [this._xScale(d) + this._xScale.bandwidth() / 2, this._chartHeight, this._xScale(d) + this._xScale.bandwidth() / 2, this._chartHeight + 6],\n        stroke: this._lineColor,\n        strokeWidth: this._tickStrokeWidth\n      }));\n\n      var textWidth = this._GetFontSize(d, this._font);\n\n      var text = new Konva.Text({\n        text: d,\n        fontSize: this._font.fontSize,\n        fontFamily: this._font.fontFamily,\n        x: this._xScale(d) + this._xScale.bandwidth() / 2 - textWidth / 2,\n        y: this._chartHeight + textHeight,\n        fill: this._font.color\n      });\n      helper.add(text);\n\n      if (this._rotateBy === 90) {\n        text.setAttr('x', text.getAttr('x') + textWidth / 2 - textHeight / 2);\n        text.setAttr('y', text.getAttr('y') + textHeight + textWidth);\n        text.rotate(-this._rotateBy);\n      }\n    });\n\n    this._group.add(helper);\n\n    helper.rotate(this._rotateBy);\n  }\n  /**\n   * @summary Creates the axis label.\n   */\n\n\n  _CreateAxisLabel(maxHeight) {\n    if (this._axisLabel === 'none') return;\n\n    var textWidth = this._GetFontSize(this._axisLabel, this._font),\n        xPos = (this._chartWidth + this._internalOffsetX) / 2 - textWidth / 2,\n        yPos = maxHeight;\n\n    var textLabel = new Konva.Text({\n      x: xPos,\n      y: yPos,\n      text: this._axisLabel,\n      fontSize: this._font.fontSize,\n      fontFamily: this._font.fontFamily,\n      fill: this._font.textColor\n    });\n\n    this._group.add(textLabel);\n  }\n\n}\n\nexport { XAxisDecorator };","map":{"version":3,"sources":["/Users/mialee/Documents/GitHub/ShareNWWebtool/src/js/Charts/BarChart/Decorators/XAxisDecorator.js"],"names":["ABarChartDecorator","Konva","Lodash","XAxisDecorator","constructor","chart","lineColor","lineStrokeWidth","tickStrokeWidth","font","fontSize","fontFamily","textColor","_lineColor","_lineStrokeWidth","_tickStrokeWidth","_font","cloneDeep","CreateChart","_chart","_CreateXAxis","GetDecoratorSettings","xAxis","color","size","_CreateAxis","_AddTicks","_CreateAxisLabel","maxHeight","helper","Group","add","Line","points","_chartHeight","_chartWidth","stroke","strokeWidth","rotate","_rotateBy","_group","textHeight","_GetFontSize","_xScale","domain","forEach","d","bandwidth","textWidth","text","Text","x","y","fill","setAttr","getAttr","_axisLabel","xPos","_internalOffsetX","yPos","textLabel"],"mappings":"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","sourcesContent":["// Cullen, Riley\n// XAxisDecorator.js\n// October 10, 2020\n\nimport { ABarChartDecorator } from \"./ABarChartDecorator\";\nimport Konva from 'konva';\nimport Lodash from 'lodash';\n\nclass XAxisDecorator extends ABarChartDecorator\n{\n    /**\n     * @summary     This type is a concrete decorator that adds a x-axis to the \n     *              bar chart. \n     * @description This class adds a x-axis line, tick marks, and tick labels\n     *              to the given bar chart (or decorator).\n     * \n     * @requires ABarChartDecorator.js\n     * @requires FontWidthDetector.js\n     * \n     * @see ABarChartDecorator.js\n     * \n     * @param {BarChart}   chart           This type is a concrete bar chart (or decorator)\n     *                                     that we plan on decorating.\n     * @param {string}     lineColor       The color of the axis and its tick marks\n     * @param {int}        lineStrokeWidth Width of the x-axis\n     * @param {int}        tickStrokeWidth Width of the x-axis ticks\n     * @param {JSON Array} font            Determines font size and font family\n     */\n    constructor({chart, lineColor = 'black', lineStrokeWidth = 1, tickStrokeWidth = 0.5,\n        font = {fontSize : 10, fontFamily : 'Times New Roman, Times, serif', textColor : '#000'}})\n    {\n        super(chart);\n        this._lineColor = lineColor;\n        this._lineStrokeWidth = lineStrokeWidth;\n        this._tickStrokeWidth = tickStrokeWidth;\n        this._font = Lodash.cloneDeep(font);\n    }\n\n    /**\n     * @summary     This function adds an x-axis to the given BarChart type.\n     * @description This function calls _chart's CreateBarChart method as well\n     *              as _CreateXAxis.\n     */\n    CreateChart()\n    {\n        this._chart.CreateChart();\n        this._CreateXAxis();\n    }\n\n    GetDecoratorSettings()\n    {\n        return {\n            xAxis: {\n                font: this._font,\n                color: {\n                    lineColor: this._lineColor,\n                },\n                size: {\n                    lineStrokeWidth: this._lineStrokeWidth,\n                    tickStrokeWidth: this._tickStrokeWidth,\n                }\n            }\n        }\n    }\n\n    /**\n     * @summary     This function adds an x-axis to the given BarChart type.\n     * @description This function creates an x-axis by calling _CreateAxis\n     *              and _AddTicks.\n     */\n    _CreateXAxis()\n    {\n        this._CreateAxis();\n        this._AddTicks();\n        this._CreateAxisLabel(maxHeight);\n    }\n\n    /**\n     * @summary     This function adds a base line that represents the x-axis.\n     * @description This function adds a line to the Konva.Group that will\n     *              serve as the base for the x-axis.\n     */\n    _CreateAxis()\n    {\n        var helper = new Konva.Group();\n        helper.add(new Konva.Line({\n            points: [0, this._chartHeight, this._chartWidth, this._chartHeight],\n            stroke: this._lineColor,\n            strokeWidth: this._lineStrokeWidth,\n        }));\n        helper.rotate(this._rotateBy)\n        this._group.add(helper);\n    }\n\n    /**\n     * @summary     This function adds tick marks and labels to the x-axis.\n     * @description This function iterates through all of the previously mapped\n     *              values in the xScale's domain and assigns them a tick \n     *              mark. The tick mark and the name of the mapped value are\n     *              then added to the Konva.Group.\n     */\n    _AddTicks()\n    {\n        var helper = new Konva.Group();\n        var textHeight = this._GetFontSize('M', this._font);\n        this._xScale.domain().forEach(d => {\n            helper.add(new Konva.Line({\n                points: [this._xScale(d) + this._xScale.bandwidth() / 2, \n                    this._chartHeight, this._xScale(d) + this._xScale.bandwidth() / 2, \n                    this._chartHeight + 6],\n                stroke: this._lineColor,\n                strokeWidth: this._tickStrokeWidth,\n            }));\n\n            var textWidth = this._GetFontSize(d, this._font);\n            var text = new Konva.Text({\n                text: d,\n                fontSize: this._font.fontSize,\n                fontFamily: this._font.fontFamily,\n                x: (this._xScale(d) + this._xScale.bandwidth() / 2) - (textWidth / 2),\n                y: this._chartHeight + (textHeight),\n                fill: this._font.color,\n            }) \n            helper.add(text);\n            if (this._rotateBy === 90) {\n                text.setAttr('x', text.getAttr('x') + (textWidth / 2) - (textHeight / 2));\n                text.setAttr('y', text.getAttr('y') + (textHeight) + textWidth);\n                text.rotate(-this._rotateBy);\n            }\n        });\n        this._group.add(helper);\n        helper.rotate(this._rotateBy);\n    }\n\n    /**\n     * @summary Creates the axis label.\n     */\n    _CreateAxisLabel(maxHeight)\n    {\n        if (this._axisLabel === 'none') return;\n\n        var textWidth = this._GetFontSize(this._axisLabel, this._font),\n            xPos = (this._chartWidth + this._internalOffsetX) / 2 - (textWidth / 2),\n            yPos = maxHeight;\n\n        var textLabel = new Konva.Text({\n            x: xPos,\n            y: yPos,\n            text: this._axisLabel,\n            fontSize: this._font.fontSize,\n            fontFamily: this._font.fontFamily,\n            fill: this._font.textColor,\n        });\n        this._group.add(textLabel);\n    }\n}\n\nexport { XAxisDecorator };"]},"metadata":{},"sourceType":"module"}
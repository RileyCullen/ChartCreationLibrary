{"ast":null,"code":"var _jsxFileName = \"/Users/mialee/Documents/GitHub/ShareNWWebtool/src/components/InfographicEditor/Editors/BackgroundElementEditor.js\";\nimport React from 'react';\nimport { LabeledTextField, Menu, LabeledColorPicker } from './Components/index';\nimport '../../../css/React/Editors/Tabless.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BackgroundElementEditor extends React.Component {\n  render() {\n    if (this.props.settings === 0) return false;\n    console.log(this.props.settings);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabless-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabless-editor\",\n        children: [/*#__PURE__*/_jsxDEV(Menu, {\n          name: \"Size\",\n          isOpen: false,\n          content: this._GetSizeContent(),\n          checkbox: {\n            displayCheckbox: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          name: \"Display\",\n          isOpen: false,\n          content: this._GetDisplayContent(),\n          checkbox: {\n            displayCheckbox: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n  _SetSizeSettings(category, key, value) {\n    let settings = this.props.settings;\n    settings[category][key] = value;\n    this.props.setGraphicSettings(settings);\n  }\n\n  _GetSizeContent() {\n    return [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(LabeledTextField, {\n        label: \"Width:\",\n        index: 'width',\n        initialValue: this.props.settings.size.width,\n        rows: 1,\n        cols: 5,\n        onChange: (d, i) => {\n          this._SetSizeSettings('size', 'width', d);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LabeledTextField, {\n        label: \"Height:\",\n        index: 'height',\n        initialValue: this.props.settings.size.height,\n        rows: 1,\n        cols: 5,\n        onChange: (d, i) => {\n          this._SetSizeSettings('size', 'height', d);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)];\n  }\n\n  _SetDisplaySettings(key, value) {\n    let settings = this.props.settings;\n    settings.display[key].value = value;\n    this.props.setGraphicSettings(settings);\n  }\n\n  _GetDisplayContent() {\n    let display = this.props.settings.display;\n    return [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: Object.keys(display).map(key => {\n        let tmp = display[key];\n\n        switch (tmp.type) {\n          case 'color-picker':\n            return /*#__PURE__*/_jsxDEV(LabeledColorPicker, {\n              label: tmp.name,\n              color: tmp.value,\n              onChange: value => {\n                this._SetDisplaySettings(key, value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this);\n\n          case 'text-field':\n            return /*#__PURE__*/_jsxDEV(LabeledTextField, {\n              label: tmp.name,\n              index: tmp.type,\n              initialValue: tmp.value,\n              rows: 1,\n              cols: 5,\n              onChange: (d, i) => {\n                this._SetDisplaySettings(key, d);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this);\n\n          default:\n            return false;\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)];\n  }\n\n}\n\nexport { BackgroundElementEditor };","map":{"version":3,"sources":["/Users/mialee/Documents/GitHub/ShareNWWebtool/src/components/InfographicEditor/Editors/BackgroundElementEditor.js"],"names":["React","LabeledTextField","Menu","LabeledColorPicker","BackgroundElementEditor","Component","render","props","settings","console","log","_GetSizeContent","displayCheckbox","_GetDisplayContent","_SetSizeSettings","category","key","value","setGraphicSettings","size","width","d","i","height","_SetDisplaySettings","display","Object","keys","map","tmp","type","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { LabeledTextField, Menu, LabeledColorPicker } from './Components/index';\n\nimport '../../../css/React/Editors/Tabless.css';\n\nclass BackgroundElementEditor extends React.Component\n{\n    render()\n    {\n        if (this.props.settings === 0) return false;\n        console.log(this.props.settings)\n        return (\n            <div className='tabless-container'>\n                <div className='tabless-editor'>\n                    <Menu \n                        name='Size'\n                        isOpen={false}\n                        content={this._GetSizeContent()}\n                        checkbox={{\n                            displayCheckbox: false,\n                        }}\n                    />\n                    <Menu \n                        name='Display'\n                        isOpen={false}\n                        content={this._GetDisplayContent()}\n                        checkbox={{\n                            displayCheckbox: false\n                        }}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    _SetSizeSettings(category, key, value)\n    {\n        let settings = this.props.settings;\n        settings[category][key] = value;\n        this.props.setGraphicSettings(settings);\n    }\n\n    _GetSizeContent()\n    {\n        return [\n            <div className='center'>\n                <LabeledTextField \n                    label='Width:'\n                    index={'width'}\n                    initialValue={this.props.settings.size.width}\n                    rows={1}\n                    cols={5}\n                    onChange={(d, i) => { this._SetSizeSettings('size', 'width', d); }}\n                />\n                <LabeledTextField \n                    label='Height:'\n                    index={'height'}\n                    initialValue={this.props.settings.size.height}\n                    rows={1}\n                    cols={5}\n                    onChange={(d, i) => { this._SetSizeSettings('size', 'height', d); }}\n                /> \n            </div>\n        ];\n    }\n\n    _SetDisplaySettings(key, value)\n    {\n        let settings = this.props.settings;\n        settings.display[key].value = value;\n        this.props.setGraphicSettings(settings);\n    }\n\n    _GetDisplayContent()\n    {\n        let display = this.props.settings.display;\n        return [\n            <div className='center'>\n                {\n                    Object.keys(display).map(key => {\n                        let tmp = display[key];\n                        switch(tmp.type) {\n                            case 'color-picker':\n                                return (\n                                    <LabeledColorPicker \n                                        label={tmp.name}\n                                        color={tmp.value}\n                                        onChange={(value) => { this._SetDisplaySettings(key, value); }}\n                                    />\n                                );\n                            case 'text-field':\n                                return (\n                                    <LabeledTextField \n                                        label={tmp.name}\n                                        index={tmp.type}\n                                        initialValue={tmp.value}\n                                        rows={1}\n                                        cols={5}\n                                        onChange={(d, i) => { this._SetDisplaySettings(key, d); }}\n                                    />\n                                );\n                            default: \n                                return false;\n                        }\n                    })\n                }\n            </div>\n        ];\n    }\n}\n\nexport { BackgroundElementEditor };"]},"metadata":{},"sourceType":"module"}
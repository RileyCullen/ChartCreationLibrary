{"ast":null,"code":"// Cullen, Riley\n// ALineChart.js\n// May 8, 2021\nimport * as d3 from 'd3';\n\nclass ALineChart {\n  /**\n   * @summary     Abstract class for LineChart type.\n   * @description Abstract class that is used to provide common structure to\n   *              the LineChart type.\n   * \n   * @param {JSON Array}  data        Data used to populate line chart.\n   *                              \n   *                                  Should be in the following format:\n   *                                      data = [dataElems]\n   *          \n   *                                  Where dataElem = {\n   *                                      year: string,\n   *                                      month: string,\n   *                                      day: string,\n   *                                      value: (integer)\n   *                                  }       \n   * \n   * @param {Konva.Group} group           The group that contains the line chart.\n   * @param {double}      chartWidth      Line chart width.\n   * @param {double}      chartHeight     Line chart height.\n   * @param {double}      lineWidth       Size of the line on the line chart.\n   * @param {double}      pointRadius     Size of the points on the line chart.\n   * @param {string}      pointColor      The color of the point on the line chart.\n   * @param {string}      lineColor       Color of line on line chart.\n   * @param {double}      internalOffsetX The x space between the chart bounding box and the chart itself.\n   * @param {double}      internalOffsetY The y space between the chart bounding box and the chart itself.\n   */\n  constructor({\n    data,\n    group,\n    chartWidth,\n    chartHeight,\n    lineWidth = 1,\n    pointRadius = 1,\n    pointColor = 'none',\n    lineColor = 'black',\n    internalOffsetX = 0,\n    internalOffsetY = 0,\n    paddingInner = 0.9\n  }) {\n    if (ALineChart === this.constructor) {\n      throw new TypeError('Abstract class \"ALineChart\" cannot be instantiated.');\n    }\n\n    if (this.CreateChart === undefined) {\n      throw new TypeError('Types extending \"ALineChart\" must implement CreateChart');\n    }\n\n    this._data = data;\n    this._group = group;\n    this._chartWidth = chartWidth;\n    this._chartHeight = chartHeight;\n    this._lineWidth = lineWidth;\n    this._pointRadius = pointRadius;\n    this._pointColor = pointColor;\n    this._lineColor = lineColor;\n    this._internalOffsetX = internalOffsetX;\n    this._internalOffsetY = internalOffsetY;\n    this._paddingInner = paddingInner;\n    this._xScale = d3.scaleBand();\n    this._yScale = d3.scaleLinear();\n\n    this._SetUpScales();\n  }\n\n  GetData() {\n    return this._data;\n  }\n\n  Remove() {\n    this._group.destroy();\n  }\n\n  GetChartSettings() {\n    return {\n      size: {\n        chartWidth: this._chartWidth,\n        chartHeight: this._chartHeight,\n        lineWidth: this._lineWidth,\n        pointRadius: this._pointRadius\n      },\n      color: {\n        lineColor: this._lineColor,\n        pointColor: this._pointColor\n      },\n      spacing: {\n        internalOffsetX: this._internalOffsetX\n      }\n    };\n  }\n\n  UpdateData(data) {\n    this._group.destroyChildren();\n\n    this._data = data;\n\n    this._SetUpScales();\n  }\n\n  UpdateChartSettings(settings) {\n    this._chartWidth = parseFloat(settings.size.chartWidth);\n    this._chartHeight = parseFloat(settings.size.chartHeight);\n    this._lineWidth = settings.size.lineWidth;\n    this._pointRadius = settings.size.pointRadius;\n    this._lineColor = settings.color.lineColor;\n    this._pointColor = settings.color.pointColor;\n    this._internalOffsetX = parseFloat(settings.spacing.internalOffsetX);\n\n    this._group.destroyChildren();\n\n    this._SetUpScales();\n  }\n\n  _SetUpScales() {\n    this._SetUpXRange();\n\n    this._SetUpYRange();\n\n    this._SetUpXDomain();\n\n    this._SetUpYDomain();\n  }\n  /**\n   * @summary     Initializes the x scale's domain.\n   * @description Inserts all of the date values from the data array into \n   *              xScale's domain.\n   */\n\n\n  _SetUpXDomain() {\n    this._xScale.domain(this._data.map(d => {\n      return d.category;\n    }));\n  }\n  /**\n   * @summary     Initializes the y scale's domain.\n   * @description Sets the minimum y domain to zero and the max value in y's\n   *              domain to whatever the max value in _data is.\n   */\n\n\n  _SetUpYDomain() {\n    this._yScale.domain([0, d3.max(this._data, function (d) {\n      return +d.value;\n    })]);\n  }\n\n  _SetUpXRange() {\n    this._xScale.range([0, this._chartWidth]).paddingInner(this._paddingInner);\n  }\n\n  _SetUpYRange() {\n    this._yScale.range([this._chartHeight, 0]);\n  }\n\n}\n\nexport { ALineChart };","map":{"version":3,"sources":["/Users/mialee/Documents/GitHub/ShareNWWebtool/src/js/Charts/LineChart/ALineChart.js"],"names":["d3","ALineChart","constructor","data","group","chartWidth","chartHeight","lineWidth","pointRadius","pointColor","lineColor","internalOffsetX","internalOffsetY","paddingInner","TypeError","CreateChart","undefined","_data","_group","_chartWidth","_chartHeight","_lineWidth","_pointRadius","_pointColor","_lineColor","_internalOffsetX","_internalOffsetY","_paddingInner","_xScale","scaleBand","_yScale","scaleLinear","_SetUpScales","GetData","Remove","destroy","GetChartSettings","size","color","spacing","UpdateData","destroyChildren","UpdateChartSettings","settings","parseFloat","_SetUpXRange","_SetUpYRange","_SetUpXDomain","_SetUpYDomain","domain","map","d","category","max","value","range"],"mappings":"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","sourcesContent":["// Cullen, Riley\n// ALineChart.js\n// May 8, 2021\n\nimport * as d3 from 'd3';\n \nclass ALineChart \n{\n    /**\n     * @summary     Abstract class for LineChart type.\n     * @description Abstract class that is used to provide common structure to\n     *              the LineChart type.\n     * \n     * @param {JSON Array}  data        Data used to populate line chart.\n     *                              \n     *                                  Should be in the following format:\n     *                                      data = [dataElems]\n     *          \n     *                                  Where dataElem = {\n     *                                      year: string,\n     *                                      month: string,\n     *                                      day: string,\n     *                                      value: (integer)\n     *                                  }       \n     * \n     * @param {Konva.Group} group           The group that contains the line chart.\n     * @param {double}      chartWidth      Line chart width.\n     * @param {double}      chartHeight     Line chart height.\n     * @param {double}      lineWidth       Size of the line on the line chart.\n     * @param {double}      pointRadius     Size of the points on the line chart.\n     * @param {string}      pointColor      The color of the point on the line chart.\n     * @param {string}      lineColor       Color of line on line chart.\n     * @param {double}      internalOffsetX The x space between the chart bounding box and the chart itself.\n     * @param {double}      internalOffsetY The y space between the chart bounding box and the chart itself.\n     */\n    constructor({data, group, chartWidth, chartHeight, lineWidth = 1, \n        pointRadius = 1, pointColor = 'none', lineColor = 'black', internalOffsetX = 0,\n        internalOffsetY = 0, paddingInner = 0.9})\n    {\n        if (ALineChart === this.constructor) {\n            throw new TypeError('Abstract class \"ALineChart\" cannot be instantiated.')\n        }\n        if (this.CreateChart === undefined) {\n            throw new TypeError('Types extending \"ALineChart\" must implement CreateChart')\n        }\n\n        this._data = data;\n        this._group = group;\n        this._chartWidth = chartWidth;\n        this._chartHeight = chartHeight;\n        this._lineWidth = lineWidth;\n        this._pointRadius = pointRadius;\n        this._pointColor = pointColor;\n        this._lineColor = lineColor;\n        this._internalOffsetX = internalOffsetX;\n        this._internalOffsetY = internalOffsetY;\n        this._paddingInner = paddingInner;\n        this._xScale = d3.scaleBand();\n        this._yScale = d3.scaleLinear();\n\n        this._SetUpScales();\n    }\n   \n    GetData()\n    {\n        return this._data;\n    }\n\n    Remove()\n    {\n        this._group.destroy();\n    }\n\n    GetChartSettings()\n    {\n        return {\n            size: {\n                chartWidth: this._chartWidth,\n                chartHeight: this._chartHeight,\n                lineWidth: this._lineWidth,\n                pointRadius: this._pointRadius,\n            },\n            color: {\n                lineColor: this._lineColor,\n                pointColor: this._pointColor,\n            },\n            spacing: {\n                internalOffsetX: this._internalOffsetX,\n            }\n        }\n    }\n\n    UpdateData(data)\n    {\n        this._group.destroyChildren();\n        this._data = data;\n        this._SetUpScales();\n    }\n\n    UpdateChartSettings(settings)\n    {\n        this._chartWidth = parseFloat(settings.size.chartWidth);\n        this._chartHeight = parseFloat(settings.size.chartHeight);\n        this._lineWidth = settings.size.lineWidth;\n        this._pointRadius = settings.size.pointRadius;\n\n        this._lineColor = settings.color.lineColor;\n        this._pointColor = settings.color.pointColor;\n\n        this._internalOffsetX = parseFloat(settings.spacing.internalOffsetX);\n\n        this._group.destroyChildren();\n        this._SetUpScales();\n    }\n\n    _SetUpScales()\n    {\n        this._SetUpXRange();\n        this._SetUpYRange();\n        this._SetUpXDomain();\n        this._SetUpYDomain();\n    }\n\n    /**\n     * @summary     Initializes the x scale's domain.\n     * @description Inserts all of the date values from the data array into \n     *              xScale's domain.\n     */\n    _SetUpXDomain()\n    {\n        this._xScale.domain(this._data.map(d => { return d.category; }));\n    }\n\n    /**\n     * @summary     Initializes the y scale's domain.\n     * @description Sets the minimum y domain to zero and the max value in y's\n     *              domain to whatever the max value in _data is.\n     */\n    _SetUpYDomain()\n    {\n        this._yScale.domain([0, d3.max(this._data, function(d) { return +d.value; })]);\n    }\n\n    _SetUpXRange()\n    {\n        this._xScale.range([0, this._chartWidth])\n            .paddingInner(this._paddingInner);\n    }\n\n    _SetUpYRange()\n    {\n        this._yScale.range([this._chartHeight, 0])\n    }\n}\n\nexport { ALineChart };"]},"metadata":{},"sourceType":"module"}
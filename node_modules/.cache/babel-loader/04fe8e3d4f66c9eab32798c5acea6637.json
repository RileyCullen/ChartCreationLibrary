{"ast":null,"code":"// Cullen, Riley\n// XAxisDecorator.js\n// October 10, 2020\nimport { ABarChartDecorator } from \"./ABarChartDecorator\";\nimport Konva from 'konva';\nimport Lodash from 'lodash';\n\nclass XAxisDecorator extends ABarChartDecorator {\n  /**\n   * @summary     This type is a concrete decorator that adds a x-axis to the \n   *              bar chart. \n   * @description This class adds a x-axis line, tick marks, and tick labels\n   *              to the given bar chart (or decorator).\n   * \n   * @requires ABarChartDecorator.js\n   * @requires FontWidthDetector.js\n   * \n   * @see ABarChartDecorator.js\n   * \n   * @param {BarChart}   chart           This type is a concrete bar chart (or decorator)\n   *                                     that we plan on decorating.\n   * @param {string}     lineColor       The color of the axis and its tick marks\n   * @param {int}        lineStrokeWidth Width of the x-axis\n   * @param {int}        tickStrokeWidth Width of the x-axis ticks\n   * @param {JSON Array} font            Determines font size and font family\n   */\n  constructor({\n    chart,\n    axisLabel = 'none',\n    lineColor = 'black',\n    lineStrokeWidth = 1,\n    tickStrokeWidth = 0.5,\n    font = {\n      fontSize: 10,\n      fontFamily: 'Times New Roman, Times, serif',\n      textColor: '#000'\n    }\n  }) {\n    super(chart);\n    this._lineColor = lineColor;\n    this._axisLabel = axisLabel;\n    this._lineStrokeWidth = lineStrokeWidth;\n    this._tickStrokeWidth = tickStrokeWidth;\n    this._font = Lodash.cloneDeep(font);\n  }\n  /**\n   * @summary     This function adds an x-axis to the given BarChart type.\n   * @description This function calls _chart's CreateBarChart method as well\n   *              as _CreateXAxis.\n   */\n\n\n  CreateChart() {\n    this._chart.CreateChart();\n\n    this._CreateXAxis();\n  }\n\n  GetDecoratorSettings() {\n    return {\n      xAxis: {\n        label: this._axisLabel,\n        font: this._font,\n        color: {\n          lineColor: this._lineColor\n        },\n        size: {\n          lineStrokeWidth: this._lineStrokeWidth,\n          tickStrokeWidth: this._tickStrokeWidth\n        }\n      }\n    };\n  }\n  /**\n   * @summary     This function adds an x-axis to the given BarChart type.\n   * @description This function creates an x-axis by calling _CreateAxis\n   *              and _AddTicks.\n   */\n\n\n  _CreateXAxis() {\n    this._CreateAxis();\n\n    var maxHeight = this._AddTicks();\n\n    this._CreateAxisLabel(maxHeight);\n  }\n  /**\n   * @summary     This function adds a base line that represents the x-axis.\n   * @description This function adds a line to the Konva.Group that will\n   *              serve as the base for the x-axis.\n   */\n\n\n  _CreateAxis() {\n    var helper = new Konva.Group();\n    helper.add(new Konva.Line({\n      points: [0, this._chartHeight, this._chartWidth, this._chartHeight],\n      stroke: this._lineColor,\n      strokeWidth: this._lineStrokeWidth\n    }));\n    helper.rotate(this._rotateBy);\n\n    this._group.add(helper);\n  }\n  /**\n   * @summary     This function adds tick marks and labels to the x-axis.\n   * @description This function iterates through all of the previously mapped\n   *              values in the xScale's domain and assigns them a tick \n   *              mark. The tick mark and the name of the mapped value are\n   *              then added to the Konva.Group.\n   */\n\n\n  _AddTicks() {\n    var helper = new Konva.Group();\n\n    var textHeight = this._GetFontSize('M', this._font);\n\n    this._xScale.domain().forEach(d => {\n      helper.add(new Konva.Line({\n        points: [this._xScale(d) + this._xScale.bandwidth() / 2, this._chartHeight, this._xScale(d) + this._xScale.bandwidth() / 2, this._chartHeight + 6],\n        stroke: this._lineColor,\n        strokeWidth: this._tickStrokeWidth\n      }));\n\n      var textWidth = this._GetFontSize(d, this._font);\n\n      var text = new Konva.Text({\n        text: d,\n        fontSize: this._font.fontSize,\n        fontFamily: this._font.fontFamily,\n        x: this._xScale(d) + this._xScale.bandwidth() / 2 - textWidth / 2,\n        y: this._chartHeight + textHeight,\n        fill: this._font.color\n      });\n      helper.add(text);\n\n      if (this._rotateBy === 90) {\n        text.setAttr('x', text.getAttr('x') + textWidth / 2 - textHeight / 2);\n        text.setAttr('y', text.getAttr('y') + textHeight + textWidth);\n        text.rotate(-this._rotateBy);\n      }\n    });\n\n    this._group.add(helper);\n\n    helper.rotate(this._rotateBy);\n    return 2 * textHeight + this._chartHeight + 5;\n  }\n  /**\n   * @summary Creates the axis label.\n   */\n\n\n  _CreateAxisLabel(maxHeight) {\n    if (this._axisLabel === 'none') return;\n\n    var textWidth = this._GetFontSize(this._axisLabel, this._font),\n        xPos = this._chartWidth / 2 - textWidth / 2,\n        yPos = maxHeight;\n\n    var textLabel = new Konva.Text({\n      x: xPos,\n      y: yPos,\n      text: this._axisLabel,\n      fontSize: this._font.fontSize,\n      fontFamily: this._font.fontFamily,\n      fill: this._font.textColor\n    });\n\n    this._group.add(textLabel);\n  }\n\n}\n\nexport { XAxisDecorator };","map":{"version":3,"sources":["/Users/mialee/Documents/GitHub/ShareNWWebtool/src/js/Charts/BarChart/Decorators/XAxisDecorator.js"],"names":["ABarChartDecorator","Konva","Lodash","XAxisDecorator","constructor","chart","axisLabel","lineColor","lineStrokeWidth","tickStrokeWidth","font","fontSize","fontFamily","textColor","_lineColor","_axisLabel","_lineStrokeWidth","_tickStrokeWidth","_font","cloneDeep","CreateChart","_chart","_CreateXAxis","GetDecoratorSettings","xAxis","label","color","size","_CreateAxis","maxHeight","_AddTicks","_CreateAxisLabel","helper","Group","add","Line","points","_chartHeight","_chartWidth","stroke","strokeWidth","rotate","_rotateBy","_group","textHeight","_GetFontSize","_xScale","domain","forEach","d","bandwidth","textWidth","text","Text","x","y","fill","setAttr","getAttr","xPos","yPos","textLabel"],"mappings":"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","sourcesContent":["// Cullen, Riley\n// XAxisDecorator.js\n// October 10, 2020\n\nimport { ABarChartDecorator } from \"./ABarChartDecorator\";\nimport Konva from 'konva';\nimport Lodash from 'lodash';\n\nclass XAxisDecorator extends ABarChartDecorator\n{\n    /**\n     * @summary     This type is a concrete decorator that adds a x-axis to the \n     *              bar chart. \n     * @description This class adds a x-axis line, tick marks, and tick labels\n     *              to the given bar chart (or decorator).\n     * \n     * @requires ABarChartDecorator.js\n     * @requires FontWidthDetector.js\n     * \n     * @see ABarChartDecorator.js\n     * \n     * @param {BarChart}   chart           This type is a concrete bar chart (or decorator)\n     *                                     that we plan on decorating.\n     * @param {string}     lineColor       The color of the axis and its tick marks\n     * @param {int}        lineStrokeWidth Width of the x-axis\n     * @param {int}        tickStrokeWidth Width of the x-axis ticks\n     * @param {JSON Array} font            Determines font size and font family\n     */\n    constructor({chart, axisLabel = 'none', lineColor = 'black', lineStrokeWidth = 1, tickStrokeWidth = 0.5,\n        font = {fontSize : 10, fontFamily : 'Times New Roman, Times, serif', textColor : '#000'}})\n    {\n        super(chart);\n        this._lineColor = lineColor;\n        this._axisLabel = axisLabel;\n        this._lineStrokeWidth = lineStrokeWidth;\n        this._tickStrokeWidth = tickStrokeWidth;\n        this._font = Lodash.cloneDeep(font);\n    }\n\n    /**\n     * @summary     This function adds an x-axis to the given BarChart type.\n     * @description This function calls _chart's CreateBarChart method as well\n     *              as _CreateXAxis.\n     */\n    CreateChart()\n    {\n        this._chart.CreateChart();\n        this._CreateXAxis();\n    }\n\n    GetDecoratorSettings()\n    {\n        return {\n            xAxis: {\n                label: this._axisLabel,\n                font: this._font,\n                color: {\n                    lineColor: this._lineColor,\n                },\n                size: {\n                    lineStrokeWidth: this._lineStrokeWidth,\n                    tickStrokeWidth: this._tickStrokeWidth,\n                }\n            }\n        }\n    }\n\n    /**\n     * @summary     This function adds an x-axis to the given BarChart type.\n     * @description This function creates an x-axis by calling _CreateAxis\n     *              and _AddTicks.\n     */\n    _CreateXAxis()\n    {\n        this._CreateAxis();\n        var maxHeight = this._AddTicks();\n        this._CreateAxisLabel(maxHeight);\n    }\n\n    /**\n     * @summary     This function adds a base line that represents the x-axis.\n     * @description This function adds a line to the Konva.Group that will\n     *              serve as the base for the x-axis.\n     */\n    _CreateAxis()\n    {\n        var helper = new Konva.Group();\n        helper.add(new Konva.Line({\n            points: [0, this._chartHeight, this._chartWidth, this._chartHeight],\n            stroke: this._lineColor,\n            strokeWidth: this._lineStrokeWidth,\n        }));\n        helper.rotate(this._rotateBy)\n        this._group.add(helper);\n    }\n\n    /**\n     * @summary     This function adds tick marks and labels to the x-axis.\n     * @description This function iterates through all of the previously mapped\n     *              values in the xScale's domain and assigns them a tick \n     *              mark. The tick mark and the name of the mapped value are\n     *              then added to the Konva.Group.\n     */\n    _AddTicks()\n    {\n        var helper = new Konva.Group();\n        var textHeight = this._GetFontSize('M', this._font);\n        this._xScale.domain().forEach(d => {\n            helper.add(new Konva.Line({\n                points: [this._xScale(d) + this._xScale.bandwidth() / 2, \n                    this._chartHeight, this._xScale(d) + this._xScale.bandwidth() / 2, \n                    this._chartHeight + 6],\n                stroke: this._lineColor,\n                strokeWidth: this._tickStrokeWidth,\n            }));\n\n            var textWidth = this._GetFontSize(d, this._font);\n            var text = new Konva.Text({\n                text: d,\n                fontSize: this._font.fontSize,\n                fontFamily: this._font.fontFamily,\n                x: (this._xScale(d) + this._xScale.bandwidth() / 2) - (textWidth / 2),\n                y: this._chartHeight + (textHeight),\n                fill: this._font.color,\n            }) \n            helper.add(text);\n            if (this._rotateBy === 90) {\n                text.setAttr('x', text.getAttr('x') + (textWidth / 2) - (textHeight / 2));\n                text.setAttr('y', text.getAttr('y') + (textHeight) + textWidth);\n                text.rotate(-this._rotateBy);\n            }\n        });\n        this._group.add(helper);\n        helper.rotate(this._rotateBy);\n        return 2 * textHeight + this._chartHeight + 5;\n    }\n\n    /**\n     * @summary Creates the axis label.\n     */\n    _CreateAxisLabel(maxHeight)\n    {\n        if (this._axisLabel === 'none') return;\n\n        var textWidth = this._GetFontSize(this._axisLabel, this._font),\n            xPos = (this._chartWidth/2 - textWidth/2),\n            yPos = maxHeight;\n\n        var textLabel = new Konva.Text({\n            x: xPos,\n            y: yPos,\n            text: this._axisLabel,\n            fontSize: this._font.fontSize,\n            fontFamily: this._font.fontFamily,\n            fill: this._font.textColor,\n        });\n        this._group.add(textLabel);\n    }\n}\n\nexport { XAxisDecorator };"]},"metadata":{},"sourceType":"module"}
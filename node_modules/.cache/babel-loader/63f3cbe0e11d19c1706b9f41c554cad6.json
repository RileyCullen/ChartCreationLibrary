{"ast":null,"code":"var _jsxFileName = \"/Users/mialee/Documents/GitHub/ShareNWWebtool/src/components/InfographicEditor/Editors/Insert/Image.js\";\nimport React from 'react';\nimport '../../../../css/React/Editors/Insert/Insert.css';\nimport '../../../../css/React/Editors/Insert/Image.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Image extends React.Component {\n  constructor(props) {\n    super(props);\n    this._library = [];\n  }\n\n  render() {\n    //sessionStorage.clear();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-insert-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"upper-image-upload-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"upload-image-input\",\n          type: \"file\",\n          accept: \"image/png, image/jpeg, image/jpg\",\n          onChange: event => {\n            var inputValue = document.getElementById(\"upload-image-input\").value;\n\n            if (inputValue) {\n              var filename = URL.createObjectURL(event.target.files[0]);\n              this.props.toggleInsert('image', filename);\n              var insert = true;\n\n              for (var i = 0; i < sessionStorage.length; i++) {\n                if (sessionStorage.key(i) === inputValue) {\n                  insert = false;\n                  i = sessionStorage.length;\n                }\n              }\n\n              if (insert) {\n                console.log(\"Inserting image in library\");\n                document.getElementById('image-placeholder').innerHTML = \"\";\n                sessionStorage.setItem(inputValue, filename);\n\n                function LibraryElement(props) {\n                  const entry = /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: sessionStorage.getItem(props.key)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 37,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => {\n                        sessionStorage.removeItem(props.key);\n                        MakeLibrary();\n                      },\n                      children: \"Remove\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 38,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 36,\n                    columnNumber: 51\n                  }, this);\n\n                  return entry;\n                }\n\n                function MakeLibrary() {\n                  var library = [];\n\n                  for (var i = 0; i < sessionStorage.length; i++) library.push( /*#__PURE__*/_jsxDEV(LibraryElement, {}, sessionStorage.key(i), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 54\n                  }, this));\n\n                  var element = /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: library\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 51\n                  }, this); //ReactDOM.render(element, document.getElementById('image-placeholder'));\n\n                }\n\n                MakeLibrary();\n              }\n            }\n\n            for (var i = 0; i < sessionStorage.length; i++) console.log(\"In SESSION STORAGE: \" + sessionStorage.getItem(sessionStorage.key(i)));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"image-placeholder\",\n        className: \"editor-placeholder-text\",\n        children: \"Click upload to add an image to the library!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"image-library\",\n        children: this._library.map(d => {\n          return d;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport { Image };","map":{"version":3,"sources":["/Users/mialee/Documents/GitHub/ShareNWWebtool/src/components/InfographicEditor/Editors/Insert/Image.js"],"names":["React","Image","Component","constructor","props","_library","render","event","inputValue","document","getElementById","value","filename","URL","createObjectURL","target","files","toggleInsert","insert","i","sessionStorage","length","key","console","log","innerHTML","setItem","LibraryElement","entry","getItem","removeItem","MakeLibrary","library","push","element","map","d"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport '../../../../css/React/Editors/Insert/Insert.css';\nimport '../../../../css/React/Editors/Insert/Image.css';\n\nclass Image extends React.Component \n{\n    constructor(props){\n        super(props);\n        this._library = [];\n    }\n    render()\n    {\n        //sessionStorage.clear();\n        return (\n            <div className='editor-insert-container'>\n                <div id='upper-image-upload-container'>\n                    <input id=\"upload-image-input\" type=\"file\" accept=\"image/png, image/jpeg, image/jpg\" onChange={(event) => {\n                        var inputValue = document.getElementById(\"upload-image-input\").value;\n                        if (inputValue){\n                            var filename = URL.createObjectURL(event.target.files[0]);\n                            this.props.toggleInsert('image',filename);\n                            var insert = true;\n                            for (var i=0; i<sessionStorage.length; i++){\n                                if (sessionStorage.key(i)===inputValue){\n                                    insert = false;\n                                    i = sessionStorage.length;\n                                }\n                            }\n                            if (insert){\n                                console.log(\"Inserting image in library\");\n                                document.getElementById('image-placeholder').innerHTML = \"\";\n                                sessionStorage.setItem(inputValue, filename);\n\n                                function LibraryElement(props) {\n                                    const entry = <div>\n                                            <img src={sessionStorage.getItem(props.key)}></img>\n                                            <button onClick={() => {sessionStorage.removeItem(props.key);\n                                                                    MakeLibrary();}}>Remove</button>\n                                        </div>\n                                    return entry;\n                                  }\n\n                                function MakeLibrary() {\n                                    var library = [];\n                                    for (var i = 0; i < sessionStorage.length; i++)\n                                        library.push(<LibraryElement key={sessionStorage.key(i)} />);\n                                    var element = <div>{library}</div>;\n\n                                    //ReactDOM.render(element, document.getElementById('image-placeholder'));\n                                }\n                                \n                                MakeLibrary();\n                            }\n                        }\n                        for (var i=0; i<sessionStorage.length; i++)\n                            console.log(\"In SESSION STORAGE: \" + sessionStorage.getItem(sessionStorage.key(i)));\n                    }}></input>\n                </div>\n                <div id='image-placeholder' className='editor-placeholder-text'>Click upload to add an image to the library!</div>\n                <div id='image-library'>{this._library.map((d) => {return d})}</div>\n            </div>\n        );\n    }\n}\n\nexport { Image };"]},"metadata":{},"sourceType":"module"}
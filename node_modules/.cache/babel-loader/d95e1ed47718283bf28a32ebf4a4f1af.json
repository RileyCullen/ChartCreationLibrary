{"ast":null,"code":"var _jsxFileName = \"/Users/mialee/Documents/GitHub/ShareNWWebtool/src/components/InfographicEditor/Editors/Components/BarChartInputFields.js\";\nimport React from 'react';\nimport { TextField, ColorPicker } from './index';\nimport '../../../../css/React/Editors/BarChartInputFields.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BarChartInputFields extends React.Component {\n  render() {\n    let barData = this.props.chartData,\n        rows = 1,\n        cols = 15;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"bar-input-text\",\n          children: \"Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"bar-category-label\",\n          className: \"bar-input-text\",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"bar-value-label\",\n          className: \"bar-input-text\",\n          children: \"Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), barData.map((d, i) => {\n        let category = d.category,\n            value = d.value;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(ColorPicker, {\n            id: \"bar-data-color-picker\",\n            color: d.color,\n            onChange: color => {\n              let index = i;\n\n              this._SetChartData(color, index, 'color');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: i + '-category',\n            index: i,\n            initialValue: category,\n            rows: rows,\n            cols: cols,\n            onChange: (d, i) => {\n              this._SetChartData(d, i, 'category');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: i + '-value',\n            index: i,\n            initialValue: value,\n            rows: rows,\n            cols: cols,\n            onChange: (d, i) => {\n              this._SetChartData(d, i, 'value');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"remove-row-icon\",\n            icon: faTimesCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-input-container\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"add-row-icon\",\n          icon: faPlus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n\n  _SetChartData(d, i, type) {\n    if (d === '') return;\n    var data = this.props.chartData.map(d => {\n      return {\n        category: d.category,\n        value: d.value,\n        color: d.color\n      };\n    });\n    if (type === 'value') data[i].value = parseFloat(d);else if (type === 'category') data[i].category = d;else if (type === 'color') data[i].color = d;\n    this.props.setChartData(data);\n  }\n\n}\n\nexport { BarChartInputFields };","map":{"version":3,"sources":["/Users/mialee/Documents/GitHub/ShareNWWebtool/src/components/InfographicEditor/Editors/Components/BarChartInputFields.js"],"names":["React","TextField","ColorPicker","FontAwesomeIcon","faPlus","faTimesCircle","BarChartInputFields","Component","render","barData","props","chartData","rows","cols","map","d","i","category","value","color","index","_SetChartData","type","data","parseFloat","setChartData"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { TextField, ColorPicker } from './index';\n\nimport '../../../../css/React/Editors/BarChartInputFields.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n\nclass BarChartInputFields extends React.Component \n{\n    render()\n    {\n        let barData = this.props.chartData, rows = 1, cols = 15;\n        return (\n            <div className='bar-input-container'>\n                <div className='data-input-container'>\n                    <p className='bar-input-text'>Color</p>\n                    <p id='bar-category-label' className='bar-input-text'>Category</p>\n                    <p id='bar-value-label' className='bar-input-text'>Value</p>\n                </div>\n            {\n                barData.map((d, i) => {\n                let category = d.category, value = d.value; \n                return (\n                    <div className='data-input-container'>\n                        <ColorPicker\n                            id='bar-data-color-picker' \n                            color={d.color}\n                            onChange={(color) => {\n                                let index = i;\n                                this._SetChartData(color, index, 'color')\n                            }\n                        }/>\n                        <TextField \n                            id={i + '-category'}\n                            index={i}\n                            initialValue={category}\n                            rows={rows}\n                            cols={cols}\n                            onChange={(d, i) => { this._SetChartData(d, i, 'category')}}\n                            />\n                        <TextField\n                            id={i + '-value'}\n                            index={i}\n                            initialValue={value} \n                            rows={rows}\n                            cols={cols}\n                            onChange={(d, i) => { this._SetChartData(d, i, 'value') }}/>\n                        <FontAwesomeIcon className='remove-row-icon' icon={faTimesCircle}/>\n                    </div>);\n                })\n            }\n            <div className='data-input-container'>\n                <FontAwesomeIcon className='add-row-icon' icon={faPlus} />\n            </div>\n            </div>\n        ); \n    }\n\n    _SetChartData(d, i, type)\n    {\n        if (d === '') return;\n        var data = this.props.chartData.map(d => { return {\n            category: d.category,\n            value: d.value,\n            color: d.color,\n        }});\n\n        if (type === 'value') data[i].value = parseFloat(d);\n        else if (type === 'category') data[i].category = d;\n        else if (type === 'color') data[i].color = d;\n        this.props.setChartData(data);\n    }\n}\n\nexport { BarChartInputFields };"]},"metadata":{},"sourceType":"module"}
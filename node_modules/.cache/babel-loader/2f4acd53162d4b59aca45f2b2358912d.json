{"ast":null,"code":"// Cullen, Riley\n// November 24, 2020\n// PercentageBarChart.js\nimport { ABarChart } from './ABarChart';\nimport { StackedBarChart } from './StackedBarChart';\n\nclass PercentageBarChart extends ABarChart {\n  /**\n   * @summary     Provides a bar chart type to represent percentage data.\n   * @description Provides a bar chart type where the yScale domain is from\n   *              0 - 100. This mimics a percentage bar chart. Note that data \n   *              outside of this range will round down to 100 if above 100 and\n   *              up to 0 if below zero.\n   * \n   *              This is done by basically encapsulating a StackedBarChart\n   *              object and updating it's yScale to reflect the bounds \n   *              explained above.\n   * \n   * @requires ABarChart.js\n   * \n   * @see ABarChart.js for constructor parameters\n   */\n  constructor({\n    data,\n    group,\n    width,\n    height,\n    padding,\n    rotateBy = 0\n  }) {\n    super(data, group, width, height, padding, rotateBy);\n    this._stacked = false;\n    this._basicBar = new StackedBarChart({\n      data: data,\n      group: group,\n      width: width,\n      height: height,\n      padding: padding,\n      rotateBy: rotateBy\n    });\n\n    this._UpdateYScale();\n\n    this._CheckData();\n  }\n  /**\n   * @summary     Creates the bar chart.\n   * @description Creates the percentage bar chart by calling _basicBar's CreateBarChart\n   *              method.\n   */\n\n\n  CreateChart() {\n    this._basicBar.UpdateData(this._data);\n\n    this._UpdateYScale();\n\n    this._basicBar.CreateChart();\n  }\n\n  UpdateChartSettings(settings) {\n    super.UpdateChartSettings(settings);\n\n    this._basicBar.UpdateChartSettings(settings);\n  }\n  /**\n   * @summary     Checks data array to ensure all values are within domain.\n   * @description Iterate through all of the data elements in _data and ensures\n   *              that they are within the bounds.\n   */\n\n\n  _CheckData() {\n    this._data.forEach(d => {\n      if (d.value > 100) d.value = 100;\n      if (d.value < 0) d.value = 0;\n    });\n  }\n  /**\n   * @summary Updates yScale to have a domain from (0 - 100).\n   */\n\n\n  _UpdateYScale() {\n    this._basicBar._yScale.domain([0, 100]);\n\n    this._yScale = this._basicBar._yScale;\n  }\n\n}\n\nexport { PercentageBarChart };","map":{"version":3,"sources":["/Users/mialee/Documents/GitHub/ShareNWWebtool/src/js/Charts/BarChart/ConcreteCharts/PercentageBarChart.js"],"names":["ABarChart","StackedBarChart","PercentageBarChart","constructor","data","group","width","height","padding","rotateBy","_stacked","_basicBar","_UpdateYScale","_CheckData","CreateChart","UpdateData","_data","UpdateChartSettings","settings","forEach","d","value","_yScale","domain"],"mappings":"AAAA;AACA;AACA;AAEA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,eAAT,QAAgC,mBAAhC;;AAEA,MAAMC,kBAAN,SAAiCF,SAAjC,CACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIG,EAAAA,WAAW,CAAC;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,MAArB;AAA6BC,IAAAA,OAA7B;AAAsCC,IAAAA,QAAQ,GAAG;AAAjD,GAAD,EACX;AACI,UAAML,IAAN,EAAYC,KAAZ,EAAmBC,KAAnB,EAA0BC,MAA1B,EAAkCC,OAAlC,EAA2CC,QAA3C;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,SAAL,GAAiB,IAAIV,eAAJ,CAAoB;AACjCG,MAAAA,IAAI,EAAEA,IAD2B;AAEjCC,MAAAA,KAAK,EAAEA,KAF0B;AAGjCC,MAAAA,KAAK,EAAEA,KAH0B;AAIjCC,MAAAA,MAAM,EAAEA,MAJyB;AAKjCC,MAAAA,OAAO,EAAEA,OALwB;AAMjCC,MAAAA,QAAQ,EAAEA;AANuB,KAApB,CAAjB;;AAQA,SAAKG,aAAL;;AACA,SAAKC,UAAL;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACIC,EAAAA,WAAW,GACX;AACI,SAAKH,SAAL,CAAeI,UAAf,CAA0B,KAAKC,KAA/B;;AACA,SAAKJ,aAAL;;AACA,SAAKD,SAAL,CAAeG,WAAf;AACH;;AAEDG,EAAAA,mBAAmB,CAACC,QAAD,EACnB;AACI,UAAMD,mBAAN,CAA0BC,QAA1B;;AACA,SAAKP,SAAL,CAAeM,mBAAf,CAAmCC,QAAnC;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACIL,EAAAA,UAAU,GACV;AACI,SAAKG,KAAL,CAAWG,OAAX,CAAmBC,CAAC,IAAI;AACpB,UAAIA,CAAC,CAACC,KAAF,GAAU,GAAd,EAAmBD,CAAC,CAACC,KAAF,GAAU,GAAV;AACnB,UAAID,CAAC,CAACC,KAAF,GAAU,CAAd,EAAmBD,CAAC,CAACC,KAAF,GAAU,CAAV;AACtB,KAHD;AAIH;AAED;AACJ;AACA;;;AACIT,EAAAA,aAAa,GACb;AACI,SAAKD,SAAL,CAAeW,OAAf,CAAuBC,MAAvB,CAA8B,CAAC,CAAD,EAAI,GAAJ,CAA9B;;AACA,SAAKD,OAAL,GAAe,KAAKX,SAAL,CAAeW,OAA9B;AACH;;AAtEL;;AAyEA,SAASpB,kBAAT","sourcesContent":["// Cullen, Riley\n// November 24, 2020\n// PercentageBarChart.js\n\nimport { ABarChart } from './ABarChart';\nimport { StackedBarChart } from './StackedBarChart';\n\nclass PercentageBarChart extends ABarChart\n{\n    /**\n     * @summary     Provides a bar chart type to represent percentage data.\n     * @description Provides a bar chart type where the yScale domain is from\n     *              0 - 100. This mimics a percentage bar chart. Note that data \n     *              outside of this range will round down to 100 if above 100 and\n     *              up to 0 if below zero.\n     * \n     *              This is done by basically encapsulating a StackedBarChart\n     *              object and updating it's yScale to reflect the bounds \n     *              explained above.\n     * \n     * @requires ABarChart.js\n     * \n     * @see ABarChart.js for constructor parameters\n     */\n    constructor({data, group, width, height, padding, rotateBy = 0})\n    {\n        super(data, group, width, height, padding, rotateBy);\n        this._stacked = false;\n        this._basicBar = new StackedBarChart({\n            data: data, \n            group: group, \n            width: width, \n            height: height, \n            padding: padding, \n            rotateBy: rotateBy\n        });\n        this._UpdateYScale();\n        this._CheckData();\n    }\n\n    /**\n     * @summary     Creates the bar chart.\n     * @description Creates the percentage bar chart by calling _basicBar's CreateBarChart\n     *              method.\n     */\n    CreateChart()\n    {\n        this._basicBar.UpdateData(this._data);\n        this._UpdateYScale();\n        this._basicBar.CreateChart();\n    }\n\n    UpdateChartSettings(settings)\n    {\n        super.UpdateChartSettings(settings);\n        this._basicBar.UpdateChartSettings(settings);\n    }\n\n    /**\n     * @summary     Checks data array to ensure all values are within domain.\n     * @description Iterate through all of the data elements in _data and ensures\n     *              that they are within the bounds.\n     */\n    _CheckData()\n    {\n        this._data.forEach(d => {\n            if (d.value > 100) d.value = 100;\n            if (d.value < 0)   d.value = 0;\n        }); \n    }\n\n    /**\n     * @summary Updates yScale to have a domain from (0 - 100).\n     */\n    _UpdateYScale()\n    {\n        this._basicBar._yScale.domain([0, 100]);\n        this._yScale = this._basicBar._yScale;\n    }\n}\n\nexport { PercentageBarChart };"]},"metadata":{},"sourceType":"module"}
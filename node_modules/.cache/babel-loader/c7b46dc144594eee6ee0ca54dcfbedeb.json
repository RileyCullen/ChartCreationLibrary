{"ast":null,"code":"var _jsxFileName = \"/Users/mialee/Documents/GitHub/ShareNWWebtool/src/components/InfographicEditor/Editors/Insert/Image.js\";\nimport React from 'react';\nimport '../../../../css/React/Editors/Insert/Insert.css';\nimport '../../../../css/React/Editors/Insert/Image.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Image extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      library: []\n    };\n  }\n\n  LibraryElement(key) {\n    const entry = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: sessionStorage.getItem(key)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          sessionStorage.removeItem(key);\n\n          this._MakeLibrary();\n        },\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 23\n    }, this);\n\n    return entry;\n  }\n\n  _MakeLibrary() {\n    this.state.library = [];\n\n    for (var i = 0; i < sessionStorage.length; i++) this.state.library.push( /*#__PURE__*/_jsxDEV(this.LibraryElement, {}, sessionStorage.key(i), false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 37\n    }, this));\n  }\n\n  render() {\n    sessionStorage.clear();\n    var uploadMessage;\n    if (this.state.library.length === 0) uploadMessage = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Click upload to add an image to the library!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }, this);else uploadMessage = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-insert-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"upper-image-upload-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"upload-image-input\",\n          type: \"file\",\n          accept: \"image/png, image/jpeg, image/jpg\",\n          onChange: event => {\n            var inputValue = document.getElementById(\"upload-image-input\").value;\n\n            if (inputValue) {\n              var filename = URL.createObjectURL(event.target.files[0]);\n              this.props.toggleInsert('image', filename);\n              var insert = true;\n\n              for (var i = 0; i < sessionStorage.length; i++) {\n                if (sessionStorage.key(i) === inputValue) {\n                  insert = false;\n                  i = sessionStorage.length;\n                }\n              }\n\n              if (insert) {\n                console.log(\"Inserting image in library\");\n                sessionStorage.setItem(inputValue, filename);\n                /*function LibraryElement(props) {\n                    const entry = <div>\n                            <img src={sessionStorage.getItem(props.key)}></img>\n                            <button onClick={() => {sessionStorage.removeItem(props.key); MakeLibrary();}}>Remove</button>\n                        </div>\n                    return entry;\n                  }\n                 function MakeLibrary() {\n                    var library = [];\n                    for (var i = 0; i < sessionStorage.length; i++)\n                        library.push(<LibraryElement key={sessionStorage.key(i)} />);\n                    return library;\n                }*/\n\n                this._MakeLibrary();\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"image-placeholder\",\n        className: \"editor-placeholder-text\",\n        children: uploadMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"image-library\",\n        children: this.state.library.map(d => {\n          return d;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport { Image };","map":{"version":3,"sources":["/Users/mialee/Documents/GitHub/ShareNWWebtool/src/components/InfographicEditor/Editors/Insert/Image.js"],"names":["React","Image","Component","constructor","props","state","library","LibraryElement","key","entry","sessionStorage","getItem","removeItem","_MakeLibrary","i","length","push","render","clear","uploadMessage","event","inputValue","document","getElementById","value","filename","URL","createObjectURL","target","files","toggleInsert","insert","console","log","setItem","map","d"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport '../../../../css/React/Editors/Insert/Insert.css';\nimport '../../../../css/React/Editors/Insert/Image.css';\n\nclass Image extends React.Component \n{\n    constructor(props){\n        super(props);\n        this.state = {\n            library: [],\n        };\n    }\n\n    LibraryElement(key){\n        const entry = <div>\n            <img src={sessionStorage.getItem(key)}></img>\n            <button onClick={() => {sessionStorage.removeItem(key); this._MakeLibrary();}}>Remove</button>\n            </div>\n        return entry;\n    }\n\n    _MakeLibrary(){\n        this.state.library = [];\n        for (var i = 0; i < sessionStorage.length; i++)\n            this.state.library.push(<this.LibraryElement key={sessionStorage.key(i)} />);\n    }\n\n    render()\n    {\n        sessionStorage.clear();\n        var uploadMessage;\n        if (this.state.library.length ===0 )\n            uploadMessage = <div>Click upload to add an image to the library!</div>;\n        else\n            uploadMessage = <div></div>;\n        return (\n            <div className='editor-insert-container'>\n                <div id='upper-image-upload-container'>\n                    <input id=\"upload-image-input\" type=\"file\" accept=\"image/png, image/jpeg, image/jpg\" onChange={(event) => {\n                        var inputValue = document.getElementById(\"upload-image-input\").value;\n                        if (inputValue){\n                            var filename = URL.createObjectURL(event.target.files[0]);\n                            this.props.toggleInsert('image',filename);\n                            var insert = true;\n                            for (var i=0; i<sessionStorage.length; i++){\n                                if (sessionStorage.key(i)===inputValue){\n                                    insert = false;\n                                    i = sessionStorage.length;\n                                }\n                            }\n                            if (insert){\n                                console.log(\"Inserting image in library\");\n                                sessionStorage.setItem(inputValue, filename);\n\n                                /*function LibraryElement(props) {\n                                    const entry = <div>\n                                            <img src={sessionStorage.getItem(props.key)}></img>\n                                            <button onClick={() => {sessionStorage.removeItem(props.key); MakeLibrary();}}>Remove</button>\n                                        </div>\n                                    return entry;\n                                  }\n\n                                function MakeLibrary() {\n                                    var library = [];\n                                    for (var i = 0; i < sessionStorage.length; i++)\n                                        library.push(<LibraryElement key={sessionStorage.key(i)} />);\n                                    return library;\n                                }*/\n                                \n                                this._MakeLibrary();\n                            }\n                        }\n                    }}></input>\n                </div>\n                <div id='image-placeholder' className='editor-placeholder-text'>{uploadMessage}</div>\n                <div id='image-library'>{this.state.library.map((d) => {return d})}</div>\n            </div>\n        );\n    }\n}\n\nexport { Image };"]},"metadata":{},"sourceType":"module"}
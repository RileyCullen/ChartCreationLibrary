{"ast":null,"code":"var _jsxFileName = \"/Users/mialee/Documents/GitHub/ShareNWWebtool/src/components/InfographicEditor/Editors/Components/StackedBarInputFields.js\";\nimport { faPlusSquare, faTimes, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport '../../../../css/React/Editors/StackedBarInputFields.css';\nimport { ColorPicker, TextField } from './index';\nimport { CategoryGenerator } from '../../../Helpers/CategoryGenerator';\nimport Lodash from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StackedBarInputFields extends React.Component {\n  constructor(props) {\n    super(props);\n    this._generateCategory = CategoryGenerator();\n  }\n\n  render() {\n    let data = this._ReformatData(),\n        categories = Array.from(new Set(this.props.chartData.map(d => d.category))),\n        cols = 10;\n\n    console.log(this.props.chartData);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stacked-bar-grid-four\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            position: 'relative',\n            left: '15px'\n          },\n          children: \"Subcategory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stacked-bar-grid-auto\",\n          style: {\n            width: 'max-content',\n            position: 'relative',\n            left: '25px'\n          },\n          children: categories.map((d, i) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'relative',\n                top: '-10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                id: \"remove-column-icon\",\n                className: \"remove-row-icon\",\n                icon: faTimes,\n                onClick: () => {\n                  this._RemoveCategory(d);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: i + '-category',\n                index: i,\n                initialValue: d,\n                rows: 1,\n                cols: cols,\n                onChange: (value, index) => {\n                  this._SetCategory(categories, value, index);\n                }\n              }, this.props.chartData.length + '-category', false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          style: {\n            fontSize: '20px',\n            position: 'relative',\n            left: '10px',\n            top: '18px'\n          },\n          icon: faPlusSquare,\n          onClick: () => {\n            this._AddCategory();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), data.map((d, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stacked-bar-grid-four extra-margin\",\n            children: [/*#__PURE__*/_jsxDEV(ColorPicker, {\n              id: \"stacked-bar-color-picker\",\n              color: d.data[0].color,\n              onChange: color => {\n                this._SetColor(data, color, i);\n              }\n            }, d.subcategory + '-' + i + '-color', false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: i + '-subcategory',\n              index: i,\n              initialValue: d.subcategory,\n              rows: 1,\n              cols: cols + 5,\n              onChange: (value, index) => {\n                this._SetSubcategory(data, value, index);\n              }\n            }, d.subcategory + '-' + i + '-subcategory', false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stacked-bar-grid-auto\",\n              children: d.data.map((d, i) => {\n                let content = false;\n                console.log(d);\n                categories.forEach((e, j) => {\n                  if (e === d.category) {\n                    content = /*#__PURE__*/_jsxDEV(TextField, {\n                      id: j + '-category',\n                      index: d.originalIndex,\n                      initialValue: d.value,\n                      rows: 1,\n                      cols: cols,\n                      onChange: (d, i) => {\n                        this._SetChartData(d, i, 'value');\n                      }\n                    }, d.subcategory + '-' + j + '-category', false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 63\n                    }, this);\n                  }\n                });\n                return content;\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: \"remove-row-icon\",\n              icon: faTimesCircle,\n              onClick: () => {\n                this._RemoveSubcategory(d.subcategory);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-row-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this._AddSubcategory();\n          },\n          children: \"Add a Row\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n  _RemoveCategory(category) {\n    let data = Lodash.cloneDeep(this.props.chartData);\n    Lodash.remove(data, n => {\n      return n.category === category;\n    });\n    this.props.setChartData(data);\n  }\n\n  _AddCategory() {\n    let data = Lodash.cloneDeep(this.props.chartData),\n        subcategories = Array.from(new Set(this.props.chartData.map(d => d.subcategory))),\n        categoryLabel = this._generateCategory(),\n        colors = {};\n\n    subcategories.forEach(d => {\n      data.forEach(e => {\n        if (e.subcategory === d) {\n          colors[d] = e.color;\n        }\n      });\n    });\n    subcategories.forEach(d => {\n      data.push({\n        category: categoryLabel,\n        subcategory: d,\n        value: 10,\n        color: colors[d]\n      });\n    });\n    this.props.setChartData(data);\n  }\n\n  _RemoveSubcategory(subcategory) {\n    let data = Lodash.cloneDeep(this.props.chartData);\n    Lodash.remove(data, n => {\n      return n.subcategory === subcategory;\n    });\n    this.props.setChartData(data);\n  }\n\n  _AddSubcategory() {\n    let data = Lodash.cloneDeep(this.props.chartData),\n        categories = Array.from(new Set(this.props.chartData.map(d => d.category))),\n        categoryLabel = this._generateCategory();\n\n    categories.forEach(d => {\n      data.push({\n        category: d,\n        subcategory: categoryLabel,\n        value: 10,\n        color: '#000000'\n      });\n    });\n    this.props.setChartData(data);\n  }\n\n  _ReformatData() {\n    let subcategories = new Set(this.props.chartData.map(d => d.subcategory)),\n        helper = [];\n\n    for (let item of subcategories) {\n      helper.splice(helper.length, 0, {\n        subcategory: item,\n        data: []\n      });\n    }\n\n    helper.forEach(d => {\n      this.props.chartData.forEach((e, i) => {\n        let subcategory = d.subcategory;\n\n        if (subcategory === e.subcategory) {\n          d.data.splice(d.data.length, 0, {\n            category: e.category,\n            value: e.value,\n            color: e.color,\n            originalIndex: i\n          });\n        }\n      });\n    });\n    return helper;\n  }\n\n  _SetChartData(d, i, type) {\n    if (d === '') return;\n\n    let data = this._CreateDataCopy();\n\n    if (type === 'value') data[i].value = parseFloat(d);\n    this.props.setChartData(data);\n  }\n\n  _SetSubcategory(data, d, i) {\n    let tmp = this._CreateDataCopy();\n\n    data[i].data.forEach(content => {\n      tmp[content.originalIndex].subcategory = d;\n    });\n    this.props.setChartData(tmp);\n  }\n\n  _SetColor(data, d, i) {\n    let tmp = this._CreateDataCopy();\n\n    data[i].data.forEach(content => {\n      tmp[content.originalIndex].color = d;\n    });\n    this.props.setChartData(tmp);\n  }\n\n  _SetCategory(categories, d, i) {\n    let tmp = this._CreateDataCopy();\n\n    let final = tmp.map(elem => {\n      if (elem.category === categories[i]) {\n        return {\n          category: d,\n          subcategory: elem.subcategory,\n          value: elem.value,\n          color: elem.color\n        };\n      }\n\n      return elem;\n    });\n    this.props.setChartData(final);\n  }\n\n  _CreateDataCopy() {\n    return this.props.chartData.map(d => {\n      return {\n        category: d.category,\n        subcategory: d.subcategory,\n        value: d.value,\n        color: d.color\n      };\n    });\n  }\n\n}\n\nexport { StackedBarInputFields };","map":{"version":3,"sources":["/Users/mialee/Documents/GitHub/ShareNWWebtool/src/components/InfographicEditor/Editors/Components/StackedBarInputFields.js"],"names":["faPlusSquare","faTimes","faTimesCircle","FontAwesomeIcon","React","ColorPicker","TextField","CategoryGenerator","Lodash","StackedBarInputFields","Component","constructor","props","_generateCategory","render","data","_ReformatData","categories","Array","from","Set","chartData","map","d","category","cols","console","log","position","left","width","i","top","_RemoveCategory","value","index","_SetCategory","length","fontSize","_AddCategory","color","_SetColor","subcategory","_SetSubcategory","content","forEach","e","j","originalIndex","_SetChartData","_RemoveSubcategory","_AddSubcategory","cloneDeep","remove","n","setChartData","subcategories","categoryLabel","colors","push","helper","item","splice","type","_CreateDataCopy","parseFloat","tmp","final","elem"],"mappings":"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","sourcesContent":["import { faPlusSquare, faTimes, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nimport '../../../../css/React/Editors/StackedBarInputFields.css';\n\nimport { ColorPicker, TextField } from './index';\nimport { CategoryGenerator } from '../../../Helpers/CategoryGenerator';\nimport Lodash from 'lodash';\n\nclass StackedBarInputFields extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this._generateCategory = CategoryGenerator();\n    }\n\n    render()\n    {\n        let data = this._ReformatData(), \n            categories = Array.from(new Set(this.props.chartData.map(d => d.category))),\n            cols = 10;\n        console.log(this.props.chartData)\n        return (\n            <div>\n                <div className='stacked-bar-grid-four'>\n                    <p>Color</p>\n                    <p style={{\n                        position: 'relative',\n                        left: '15px'\n                    }}>Subcategory</p>\n                    <div className='stacked-bar-grid-auto' style={{\n                        width: 'max-content',\n                        position: 'relative',\n                        left: '25px'\n                    }}>\n                        {\n                            categories.map((d, i)=> {\n                                return (\n                                    <div style={{position: 'relative', top: '-10px',}}>\n                                        <FontAwesomeIcon id='remove-column-icon' className='remove-row-icon' icon={faTimes} \n                                            onClick={() => {  \n                                                this._RemoveCategory(d);\n                                            }}/>\n                                        <TextField \n                                            key={this.props.chartData.length + '-category'}\n                                            id={i + '-category'}\n                                            index={i}\n                                            initialValue={d}\n                                            rows={1}\n                                            cols={cols}\n                                            onChange={(value, index) => { \n                                                this._SetCategory(categories, value, index);\n                                            }}\n                                        />\n                                    </div>\n                                );       \n                            })\n                        }\n                    </div>\n                    <FontAwesomeIcon style={{\n                        fontSize: '20px',\n                        position: 'relative',\n                        left: '10px',\n                        top: '18px'\n                    }}icon={faPlusSquare} \n                    onClick={() => { this._AddCategory(); }}/>\n                </div>\n                {\n                    data.map((d, i) => {\n                        return (\n                        <div>\n                            <div className='stacked-bar-grid-four extra-margin'>\n                                <ColorPicker\n                                    key={d.subcategory + '-' + i + '-color'}\n                                    id='stacked-bar-color-picker' \n                                    color={d.data[0].color}\n                                    onChange={(color) => { \n                                        this._SetColor(data, color, i);\n                                    }}\n                                />\n                                <TextField \n                                    key={d.subcategory + '-' + i + '-subcategory'}\n                                    id={i + '-subcategory'}\n                                    index={i}\n                                    initialValue={d.subcategory}\n                                    rows={1}\n                                    cols={cols + 5}\n                                    onChange={(value, index) => { this._SetSubcategory(data, value, index); }}\n                                />\n                                <div className='stacked-bar-grid-auto'>\n                                    {\n                                        d.data.map((d, i) => {\n                                            let content = false;\n                                            console.log(d)\n                                            categories.forEach((e, j) => {\n                                                if (e === d.category) {\n                                                    content = <TextField \n                                                    key={d.subcategory + '-' + j + '-category'}\n                                                    id={j + '-category'}\n                                                    index={d.originalIndex}\n                                                    initialValue={d.value}\n                                                    rows={1}\n                                                    cols={cols}\n                                                    onChange={(d, i) => { \n                                                        this._SetChartData(\n                                                            d, i, 'value'\n                                                        )\n                                                    }}\n                                                    />\n                                                }\n                                            });\n                                            return content;\n                                        })\n                                    }\n                                </div>\n                                <FontAwesomeIcon className='remove-row-icon' icon={faTimesCircle} \n                                    onClick={() => { this._RemoveSubcategory(d.subcategory); }}/>\n                            </div>\n                        </div>\n                    )})\n                }\n                <div className='add-row-container'>\n                    <button onClick={() => { this._AddSubcategory(); }}>Add a Row</button>\n                </div>\n            </div>\n        )\n    }\n\n    _RemoveCategory(category)   \n    {\n        let data = Lodash.cloneDeep(this.props.chartData);\n        Lodash.remove(data, n => {\n            return (n.category === category);\n        });\n        this.props.setChartData(data);\n    }\n\n    _AddCategory()\n    {\n        let data = Lodash.cloneDeep(this.props.chartData),\n            subcategories = Array.from(new Set(this.props.chartData.map(d => d.subcategory))),\n            categoryLabel = this._generateCategory(),\n            colors = {};\n        \n        subcategories.forEach(d => {\n            data.forEach(e => {\n                if (e.subcategory === d) {\n                    colors[d] = e.color;\n                }\n            });\n        });\n\n        subcategories.forEach(d => {\n            data.push({\n                category: categoryLabel,\n                subcategory: d,\n                value: 10,\n                color: colors[d],\n            });\n        });\n        this.props.setChartData(data);\n    }\n\n    _RemoveSubcategory(subcategory)\n    {\n        let data = Lodash.cloneDeep(this.props.chartData);\n        Lodash.remove(data, (n) => {\n                return (n.subcategory === subcategory);\n        });\n        this.props.setChartData(data);\n    }\n\n    _AddSubcategory()\n    {\n        let data = Lodash.cloneDeep(this.props.chartData),\n            categories = Array.from(new Set(this.props.chartData.map(d => d.category))),\n            categoryLabel = this._generateCategory();\n        categories.forEach(d => {\n            data.push({\n                category: d,\n                subcategory: categoryLabel,\n                value: 10,\n                color: '#000000',\n            })\n        });\n        this.props.setChartData(data);\n    }\n\n    _ReformatData()\n    {\n        let subcategories = new Set(this.props.chartData.map(d => d.subcategory)),\n            helper = [];\n        \n        for (let item of subcategories) {\n            helper.splice(helper.length, 0, { subcategory: item, data: []})\n        }\n\n        helper.forEach((d) => {\n            this.props.chartData.forEach((e, i) => {\n                let subcategory = d.subcategory;\n                if (subcategory === e.subcategory) {\n                    d.data.splice(d.data.length, 0, {\n                        category: e.category, \n                        value: e.value,\n                        color: e.color,\n                        originalIndex: i\n                    });\n                }\n            });\n        });\n\n        return helper;\n    }\n\n    _SetChartData(d, i, type)\n    {\n        if (d === '') return;\n        let data = this._CreateDataCopy();\n\n        if (type === 'value') data[i].value = parseFloat(d);\n\n        this.props.setChartData(data);\n    }\n\n    _SetSubcategory(data, d, i)\n    {\n        let tmp = this._CreateDataCopy();\n        data[i].data.forEach((content) => {\n            tmp[content.originalIndex].subcategory = d;\n        });\n        this.props.setChartData(tmp);\n    }\n\n    _SetColor(data, d, i) \n    {\n        let tmp = this._CreateDataCopy();\n        data[i].data.forEach(content => {\n            tmp[content.originalIndex].color = d;\n        });\n        this.props.setChartData(tmp);\n    }\n\n    _SetCategory(categories, d, i)\n    {\n        let tmp = this._CreateDataCopy();\n        let final = tmp.map(elem => {\n            if (elem.category === categories[i]) {\n                return {\n                    category: d,\n                    subcategory: elem.subcategory,\n                    value: elem.value,\n                    color: elem.color,\n                }\n            }\n            return elem;\n        });\n        this.props.setChartData(final);\n    }\n\n    _CreateDataCopy()\n    {\n        return this.props.chartData.map(d => {\n            return {\n                category: d.category,\n                subcategory: d.subcategory,\n                value: d.value,\n                color: d.color\n            }\n        });\n    }\n}\n\nexport { StackedBarInputFields };"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/mialee/Documents/GitHub/ShareNWWebtool/src/components/InfographicEditor/Editors/Components/Menu.js\";\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Checkbox } from './index';\nimport '../../../../css/React/Editors/Menu.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Menu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: this.props.isOpen,\n      isChecked: this.props.checkbox.isChecked\n    };\n  }\n\n  render() {\n    let checkBox = this._DisplayCheckbox(),\n        name = this.state.isOpen ? 'dropdown-content open' : 'dropdown-content',\n        rotation = this.state.isOpen ? '90deg' : '0deg',\n        width = this.props.checkbox.displayCheckbox ? '475px' : '525px';\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-toggle-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-toggle\",\n          style: {\n            width: width\n          },\n          onClick: () => {\n            this._ToggleOpen();\n          },\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"dropdown-icon\",\n            icon: faAngleRight,\n            style: {\n              transform: 'rotate(' + rotation + ')'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"dropdown-name\",\n            children: this.props.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), checkBox]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: name,\n        children: this.props.content.map(d => {\n          return d;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"menu-element-divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n  _ToggleOpen() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  _DisplayCheckbox() {\n    if (this.props.checkbox.displayCheckbox) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"check-box-container\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          initialValue: this.state.isChecked,\n          onClick: d => {\n            this._ToggleCheckBox(d);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this);\n    }\n\n    return false;\n  }\n\n  _ToggleCheckBox(d) {\n    this.setState({\n      isChecked: !this.state.isChecked\n    });\n    this.props.checkbox.checkboxHandler(d);\n  }\n\n}\n\nexport { Menu };","map":{"version":3,"sources":["/Users/mialee/Documents/GitHub/ShareNWWebtool/src/components/InfographicEditor/Editors/Components/Menu.js"],"names":["faAngleRight","FontAwesomeIcon","React","Checkbox","Menu","Component","constructor","props","state","isOpen","isChecked","checkbox","render","checkBox","_DisplayCheckbox","name","rotation","width","displayCheckbox","_ToggleOpen","transform","content","map","d","setState","_ToggleCheckBox","checkboxHandler"],"mappings":"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","sourcesContent":["import { faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nimport { Checkbox } from './index';\n\nimport '../../../../css/React/Editors/Menu.css';\n\nclass Menu extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            isOpen: this.props.isOpen,\n            isChecked: this.props.checkbox.isChecked,\n        }\n    }\n\n    render()\n    {\n        let checkBox = this._DisplayCheckbox(),\n            name = (this.state.isOpen) ? 'dropdown-content open' : 'dropdown-content',\n            rotation = (this.state.isOpen) ? '90deg' : '0deg',\n            width = (this.props.checkbox.displayCheckbox) ? '475px' : '525px';\n        return (\n            <div className='dropdown-menu'>\n                <div className='dropdown-toggle-container'>\n                    <div className='dropdown-toggle'\n                        style={{\n                            width: width,\n                        }}\n                        onClick={() => { this._ToggleOpen(); }}>\n                        <FontAwesomeIcon \n                            className='dropdown-icon' \n                            icon={faAngleRight}\n                            style={{transform: 'rotate(' + rotation + ')'}}/>\n                        <p className='dropdown-name'>{this.props.name}</p>\n                    </div>\n                    {checkBox}\n                </div>\n                <div className={name}>\n                    {\n                        this.props.content.map((d) => {\n                            return d;\n                        })\n                    }\n                </div>\n                <hr className='menu-element-divider' />\n            </div>\n        );\n    }\n\n    _ToggleOpen()\n    {\n        this.setState({\n            isOpen: !this.state.isOpen,\n        });\n    }\n\n    _DisplayCheckbox()\n    {\n        if (this.props.checkbox.displayCheckbox) {\n            return (\n                <div className='check-box-container'>\n                    <Checkbox \n                        initialValue={this.state.isChecked}\n                        onClick={(d) => { this._ToggleCheckBox(d); }} />\n                </div>\n            );\n        }\n        return false;\n    }\n\n    _ToggleCheckBox(d)\n    {\n        this.setState({\n            isChecked: !this.state.isChecked,\n        });\n        this.props.checkbox.checkboxHandler(d);\n    }\n}\n\nexport { Menu };"]},"metadata":{},"sourceType":"module"}
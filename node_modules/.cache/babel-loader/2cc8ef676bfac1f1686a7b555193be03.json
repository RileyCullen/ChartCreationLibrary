{"ast":null,"code":"// Cullen, Riley\n// LineYAxisDecorator.js\n// May 13, 2021\nimport { ALineChartDecorator } from \"./ALineChartDecorator\";\nimport Konva from 'konva';\nimport Lodash from 'lodash';\n\nclass LineYAxisDecorator extends ALineChartDecorator {\n  /**\n   * \n   * @assumption This class assumes that the same line stroke width is used on both X\n   * and Y axis decorators.\n   * \n   * @param {*} param0 \n   */\n  constructor({\n    chart,\n    axisLabel = 'none',\n    tickCount = 2,\n    lineColor = 'black',\n    lineStrokeWidth = 1,\n    tickStrokeWidth = 0.5,\n    font = {\n      fontSize: 10,\n      fontFamily: 'Times New Roman, Times, serif',\n      textColor: 'black'\n    },\n    includeZero = false\n  }) {\n    super(chart);\n    this._axisLabel = axisLabel;\n    this._axisColor = lineColor;\n    this._lineStrokeWidth = lineStrokeWidth;\n    this._tickStrokeWidth = tickStrokeWidth;\n    this._font = Lodash.cloneDeep(font);\n    this._tickCount = tickCount;\n    this._includeZero = includeZero;\n  }\n  /**\n   * @summary Creates a chart with a Y axis.\n   */\n\n\n  CreateChart() {\n    this._chart.CreateChart();\n\n    this._CreateYAxis();\n  }\n\n  GetDecoratorSettings() {\n    return {\n      yAxis: {\n        font: this._font,\n        axis: {\n          label: this._axisLabel,\n          color: this._axisColor,\n          lineStrokeWidth: this._lineStrokeWidth,\n          tickStrokeWidth: this._tickStrokeWidth,\n          tickCount: this._tickCount,\n          includeZero: this._includeZero\n        }\n      }\n    };\n  }\n  /**\n   * @summary Helper function that calls _CreateAxis, _CreateTicks, _CreateAxisLabel.\n   */\n\n\n  _CreateYAxis() {\n    this._CreateAxis();\n\n    var maxWidth = this._CreateTicks();\n\n    this._CreateAxisLabel(maxWidth);\n  }\n  /**\n   * @summary Creates the x-axis using Konva.js.\n   */\n\n\n  _CreateAxis() {\n    var yAxis = new Konva.Line({\n      points: [-this._internalOffsetX, -this._internalOffsetY, -this._internalOffsetX, this._chartHeight - this._internalOffsetY + this._lineStrokeWidth / 2],\n      stroke: this._axisColor,\n      strokeWidth: this._lineStrokeWidth\n    });\n\n    this._group.add(yAxis);\n  }\n  /**\n   * @summary Creates the axis label.\n   */\n\n\n  _CreateAxisLabel(maxWidth) {\n    if (this._axisLabel === 'none') return;\n\n    var textWidth = this._GetFontSize(this._axisLabel, this._font),\n        xPos = -this._internalOffsetX - maxWidth - 5,\n        yPos = this._chartHeight / 2 - this._internalOffsetY + textWidth / 2;\n\n    var textLabel = new Konva.Text({\n      x: xPos,\n      y: yPos,\n      text: this._axisLabel,\n      fontSize: this._font.fontSize,\n      fontFamily: this._font.fontFamily,\n      fill: this._font.textColor\n    });\n    textLabel.rotate(-90);\n\n    this._group.add(textLabel);\n  }\n  /**\n   * @summary Creates the tick marks and tick mark labels.\n   * @returns The max width of the tick marks + the tick mark labels.\n   */\n\n\n  _CreateTicks() {\n    var yTicks = this._yScale.ticks(this._tickCount);\n\n    var helper = new Konva.Group();\n    var tickLength = 6;\n\n    var numberHeight = this._GetFontSize('M', this._font);\n\n    var maxWidth = 0;\n    yTicks.forEach(d => {\n      if (this._includeZero === false && d === 0) return;\n      console.log(d);\n\n      var numberWidth = this._GetFontSize(d, this._font);\n\n      if (numberWidth > maxWidth) maxWidth = numberWidth;\n      helper.add(new Konva.Line({\n        points: [-this._internalOffsetX, this._yScale(d) - 0.5 - this._internalOffsetY, -tickLength - this._internalOffsetX, this._yScale(d) - 0.5 - this._internalOffsetY],\n        stroke: this._axisColor,\n        strokeWidth: this._tickStrokeWidth\n      }));\n      var text = new Konva.Text({\n        text: d,\n        fill: this._font.textColor,\n        fontSize: this._font.fontSize,\n        fontFamily: this._font.fontFamily,\n        x: -tickLength - numberWidth - 5 - this._internalOffsetX,\n        y: this._yScale(d) - numberHeight / 2 - this._internalOffsetY\n      });\n      helper.add(text);\n    });\n\n    this._group.add(helper);\n\n    return maxWidth + tickLength + 5 + this._internalOffsetX;\n  }\n\n}\n\nexport { LineYAxisDecorator };","map":{"version":3,"sources":["/Users/mialee/Documents/GitHub/ShareNWWebtool/src/js/Charts/LineChart/Decorators/LineYAxisDecorator.js"],"names":["ALineChartDecorator","Konva","Lodash","LineYAxisDecorator","constructor","chart","axisLabel","tickCount","lineColor","lineStrokeWidth","tickStrokeWidth","font","fontSize","fontFamily","textColor","includeZero","_axisLabel","_axisColor","_lineStrokeWidth","_tickStrokeWidth","_font","cloneDeep","_tickCount","_includeZero","CreateChart","_chart","_CreateYAxis","GetDecoratorSettings","yAxis","axis","label","color","_CreateAxis","maxWidth","_CreateTicks","_CreateAxisLabel","Line","points","_internalOffsetX","_internalOffsetY","_chartHeight","stroke","strokeWidth","_group","add","textWidth","_GetFontSize","xPos","yPos","textLabel","Text","x","y","text","fill","rotate","yTicks","_yScale","ticks","helper","Group","tickLength","numberHeight","forEach","d","console","log","numberWidth"],"mappings":"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","sourcesContent":["// Cullen, Riley\n// LineYAxisDecorator.js\n// May 13, 2021\n\nimport { ALineChartDecorator } from \"./ALineChartDecorator\";\nimport Konva from 'konva';\nimport Lodash from 'lodash';\n\nclass LineYAxisDecorator extends ALineChartDecorator\n{\n    /**\n     * \n     * @assumption This class assumes that the same line stroke width is used on both X\n     * and Y axis decorators.\n     * \n     * @param {*} param0 \n     */\n    constructor({\n        chart,\n        axisLabel = 'none',\n        tickCount = 2,\n        lineColor = 'black',\n        lineStrokeWidth = 1,\n        tickStrokeWidth = 0.5,\n        font = {\n            fontSize: 10,\n            fontFamily: 'Times New Roman, Times, serif',\n            textColor: 'black'\n        },\n        includeZero = false,\n    })\n    {\n        super(chart);\n        this._axisLabel = axisLabel;\n        this._axisColor = lineColor;\n        this._lineStrokeWidth = lineStrokeWidth;\n        this._tickStrokeWidth = tickStrokeWidth;\n        this._font = Lodash.cloneDeep(font);\n        this._tickCount = tickCount;\n        this._includeZero = includeZero;\n    }\n\n    /**\n     * @summary Creates a chart with a Y axis.\n     */\n    CreateChart()\n    {\n        this._chart.CreateChart();\n        this._CreateYAxis();\n    }\n\n    GetDecoratorSettings()\n    {\n        return {\n            yAxis: {\n                font: this._font,\n                axis: {\n                    label: this._axisLabel,\n                    color: this._axisColor,\n                    lineStrokeWidth: this._lineStrokeWidth,\n                    tickStrokeWidth: this._tickStrokeWidth,\n                    tickCount: this._tickCount,\n                    includeZero: this._includeZero,\n                }\n            }\n        }\n    }\n\n    /**\n     * @summary Helper function that calls _CreateAxis, _CreateTicks, _CreateAxisLabel.\n     */\n    _CreateYAxis()\n    {\n        this._CreateAxis();\n        var maxWidth = this._CreateTicks();\n        this._CreateAxisLabel(maxWidth);\n    }\n\n    /**\n     * @summary Creates the x-axis using Konva.js.\n     */\n    _CreateAxis()\n    {\n        var yAxis = new Konva.Line({\n            points: [-this._internalOffsetX, \n                -this._internalOffsetY, \n                -this._internalOffsetX, \n                this._chartHeight - this._internalOffsetY + this._lineStrokeWidth / 2\n            ],\n            stroke: this._axisColor,\n            strokeWidth: this._lineStrokeWidth,\n        });\n        this._group.add(yAxis); \n    }\n\n    /**\n     * @summary Creates the axis label.\n     */\n    _CreateAxisLabel(maxWidth)\n    {\n        if (this._axisLabel === 'none') return;\n\n        var textWidth = this._GetFontSize(this._axisLabel, this._font),\n            xPos = -this._internalOffsetX - maxWidth - 5,\n            yPos = (this._chartHeight / 2) - this._internalOffsetY + (textWidth / 2);\n\n        var textLabel = new Konva.Text({\n            x: xPos,\n            y: yPos,\n            text: this._axisLabel,\n            fontSize: this._font.fontSize,\n            fontFamily: this._font.fontFamily,\n            fill: this._font.textColor,\n        });\n        textLabel.rotate(-90);\n        this._group.add(textLabel);\n    }\n\n    /**\n     * @summary Creates the tick marks and tick mark labels.\n     * @returns The max width of the tick marks + the tick mark labels.\n     */\n    _CreateTicks()\n    {\n        var yTicks = this._yScale.ticks(this._tickCount);\n        var helper = new Konva.Group();\n        var tickLength = 6;\n        var numberHeight = this._GetFontSize('M', this._font);\n        \n        var maxWidth = 0;\n\n        yTicks.forEach(d => {\n            if (this._includeZero === false && d === 0) return;\n            console.log(d);\n            var numberWidth = this._GetFontSize(d, this._font);\n\n            if (numberWidth > maxWidth) maxWidth = numberWidth;\n\n            helper.add(new Konva.Line({\n                points: [-this._internalOffsetX,\n                    this._yScale(d) - 0.5 - this._internalOffsetY,\n                    -tickLength - this._internalOffsetX, \n                    this._yScale(d) - 0.5 - this._internalOffsetY\n                ],\n                stroke: this._axisColor,\n                strokeWidth: this._tickStrokeWidth,\n            }));\n            var text = new Konva.Text({\n                text: d,\n                fill: this._font.textColor,\n                fontSize: this._font.fontSize,\n                fontFamily: this._font.fontFamily,\n                x: -tickLength - numberWidth - 5 - this._internalOffsetX,\n                y: this._yScale(d) - (numberHeight / 2) - this._internalOffsetY,\n            }); \n            helper.add(text);\n        });\n        this._group.add(helper);\n        return maxWidth + tickLength + 5 + this._internalOffsetX;\n    }\n}\n\nexport { LineYAxisDecorator };"]},"metadata":{},"sourceType":"module"}
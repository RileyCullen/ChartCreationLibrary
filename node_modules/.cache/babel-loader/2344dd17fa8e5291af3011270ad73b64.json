{"ast":null,"code":"var _jsxFileName = \"/Users/mialee/Documents/GitHub/ShareNWWebtool/src/components/Home/Content/Content.js\";\nimport React from 'react';\nimport { ContentElement } from './ContentElement';\nimport '../../../css/React/Content.css';\nimport '../../../css/React/ContentElement.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Content extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPopup: false\n    };\n    this._infogIndex = -1;\n  }\n\n  render() {\n    let popup = this._CreatePopup();\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: [popup, /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"content\",\n        className: \"content\",\n        children: this.props.currentQuery.map((d, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: /*#__PURE__*/_jsxDEV(ContentElement, {\n              index: i,\n              toggleButtons: popup === false,\n              elementName: d.name,\n              image: d.url,\n              showPopup: this.state.showPopup,\n              togglePopup: index => {\n                this._TogglePopup(index);\n              },\n              displayEditor: infogNum => {\n                this.props.displayEditor(infogNum);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n  _TogglePopup(infogIndex = -1) {\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n    this._infogIndex = infogIndex;\n  }\n\n  _CreatePopup() {\n    if (this.state.showPopup) {\n      this._Blur();\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"preview-title\",\n            children: this.props.currentQuery[this._infogIndex].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"popup-template-button\",\n            className: \"use-template\",\n            type: \"button\",\n            value: \"Use Template\",\n            onClick: () => {\n              this.props.displayEditor(this._infogIndex);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"exit-button\",\n            onClick: () => {\n              this._ClosePopup();\n            },\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: \"exit-icon\",\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"preview-divider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-img-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.props.currentQuery[this._infogIndex].url,\n            alt: \"h\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this);\n    }\n\n    return false;\n  }\n\n  _ClosePopup() {\n    this._RemoveBlur();\n\n    this._TogglePopup();\n  }\n\n  _Blur() {\n    // blur content\n    let content = document.getElementById('content');\n    content.classList.add('blur'); // blur search bar\n\n    let toolbar = document.getElementById('toolbar-home');\n    toolbar.classList.add('blur');\n  }\n\n  _RemoveBlur() {\n    let content = document.getElementById('content');\n    content.classList.remove('blur');\n    let toolbar = document.getElementById('toolbar-home');\n    toolbar.classList.remove('blur');\n  }\n\n}\n\nexport { Content };","map":{"version":3,"sources":["/Users/mialee/Documents/GitHub/ShareNWWebtool/src/components/Home/Content/Content.js"],"names":["React","ContentElement","FontAwesomeIcon","faTimes","Content","Component","constructor","props","state","showPopup","_infogIndex","render","popup","_CreatePopup","currentQuery","map","d","i","name","url","index","_TogglePopup","infogNum","displayEditor","infogIndex","setState","_Blur","_ClosePopup","_RemoveBlur","content","document","getElementById","classList","add","toolbar","remove"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ContentElement } from './ContentElement';\n\nimport '../../../css/React/Content.css';\nimport '../../../css/React/ContentElement.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\nclass Content extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            showPopup: false,\n        }\n        this._infogIndex = -1;\n    }\n\n    render()\n    {\n        let popup = this._CreatePopup();\n        return (\n            <div className='content-container'>\n                {popup}\n                <div id='content' className='content'>\n                    {\n                        this.props.currentQuery.map((d, i) => {\n                            return (\n                            <div className='item'>\n                                <ContentElement \n                                    index={i}\n                                    toggleButtons={popup === false}\n                                    elementName={d.name}\n                                    image={d.url}\n                                    showPopup={this.state.showPopup}\n                                    togglePopup={(index) => { this._TogglePopup(index); }}\n                                    displayEditor={(infogNum) => { this.props.displayEditor(infogNum); }}/>\n                            </div>\n                            );\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    _TogglePopup(infogIndex = -1)\n    {\n        this.setState({\n            showPopup: !this.state.showPopup,\n        });\n\n        this._infogIndex = infogIndex;\n    }\n\n    _CreatePopup()\n    {\n        if (this.state.showPopup) {\n            this._Blur();\n            return (\n            <div className='preview'>\n                <div className='preview-header'>\n                    <p className='preview-title'>{this.props.currentQuery[this._infogIndex].name}</p>\n                    <input \n                        id='popup-template-button'\n                        className='use-template' \n                        type='button' \n                        value='Use Template'\n                        onClick={() => { this.props.displayEditor(this._infogIndex); }}></input>\n                    <button className='exit-button' onClick={() => { this._ClosePopup(); }}>\n                        <FontAwesomeIcon \n                            className='exit-icon'\n                            icon={faTimes}/>\n                    </button>\n                    <hr className='preview-divider'/>\n                </div>\n                <div className='preview-img-container'>\n                    <img src={this.props.currentQuery[this._infogIndex].url} alt='h'></img>\n                </div>\n            </div>);\n        }\n        return false;\n    }\n    \n    _ClosePopup()\n    {\n        this._RemoveBlur();\n        this._TogglePopup();\n    }\n\n    _Blur()\n    {\n        // blur content\n        let content = document.getElementById('content');\n        content.classList.add('blur');\n\n        // blur search bar\n        let toolbar = document.getElementById('toolbar-home');\n        toolbar.classList.add('blur');\n    }\n\n    _RemoveBlur()\n    {\n        let content = document.getElementById('content');\n        content.classList.remove('blur');\n\n        let toolbar = document.getElementById('toolbar-home');\n        toolbar.classList.remove('blur');\n    }\n}\n\nexport { Content };"]},"metadata":{},"sourceType":"module"}